/*
    ____                      __      ____
   /\  _`\   __             /'_ `\   /\  _`\
   \ \ \L\_\/\_\    __  _  /\ \L\ \  \ \ \L\ \ _ __    ___
    \ \  _\/\/\ \  /\ \/'\ \/_> _ <_  \ \ ,__//\`'__\ / __`\
     \ \ \/  \ \ \ \/>  </   /\ \L\ \  \ \ \/ \ \ \/ /\ \L\ \
      \ \_\   \ \_\ /\_/\_\  \ \____/   \ \_\  \ \_\ \ \____/
       \/_/    \/_/ \//\/_/   \/___/     \/_/   \/_/  \/___/

               Fix8Pro FIX Engine and Framework

Copyright (C) 2010-19 Fix8 Market Technologies Pty Ltd (ABN 29 167 027 198)
All Rights Reserved. [http://www.fix8mt.com] <heretohelp@fix8mt.com>

THIS FILE IS PROPRIETARY AND  CONFIDENTIAL. NO PART OF THIS FILE MAY BE REPRODUCED,  STORED
IN A RETRIEVAL SYSTEM,  OR TRANSMITTED, IN ANY FORM OR ANY MEANS,  ELECTRONIC, PHOTOSTATIC,
RECORDED OR OTHERWISE, WITHOUT THE PRIOR AND  EXPRESS WRITTEN  PERMISSION  OF  FIX8  MARKET
TECHNOLOGIES PTY LTD.
*/

// Autogenerated on 2019-09-03 07:52:50.891352
// /home/sergey/src/f8/fix8pro/compiler/py/f8c/f8c.py --template ufe_java_fields ufe_cpp_fields ufe_cs_fields ufe_py_fields ufe_cpp_messages --output-dir ./generated --schema-dir /home/sergey/src/f8/fix8pro/schema/xml FIX50SP2 FIX42 FIX44 FIX40 FIX41 FIX43 FIX50 FIX50SP1
// DO NOT EDIT!

#ifndef UFECPP_FIELDS_FIX42_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_
#define UFECPP_FIELDS_FIX42_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_

#include <string>
#include <ufecpp/ufecppversion.h>

namespace UFECPP
{
	namespace FIX42
	{
		namespace Field
		{

			// Account(1): STRING
			struct Account
			{
				static constexpr uint16_t tag{ 1 };
			};

			// AdvId(2): STRING
			struct AdvId
			{
				static constexpr uint16_t tag{ 2 };
			};

			// AdvRefID(3): STRING
			struct AdvRefID
			{
				static constexpr uint16_t tag{ 3 };
			};

			// AdvSide(4): CHAR
			struct AdvSide
			{
				static constexpr uint16_t tag{ 4 };
				static constexpr char BUY{ 'B' };
				static constexpr char SELL{ 'S' };
				static constexpr char TRADE{ 'T' };
				static constexpr char CROSS{ 'X' };
			};

			// AdvTransType(5): STRING
			struct AdvTransType
			{
				static constexpr uint16_t tag{ 5 };
				static inline const std::string CANCEL{ "C" };
				static inline const std::string NEW{ "N" };
				static inline const std::string REPLACE{ "R" };
			};

			// AvgPx(6): PRICE
			struct AvgPx
			{
				static constexpr uint16_t tag{ 6 };
			};

			// BeginSeqNo(7): INT
			struct BeginSeqNo
			{
				static constexpr uint16_t tag{ 7 };
			};

			// BeginString(8): STRING
			struct BeginString
			{
				static constexpr uint16_t tag{ 8 };
			};

			// BodyLength(9): INT
			struct BodyLength
			{
				static constexpr uint16_t tag{ 9 };
			};

			// CheckSum(10): STRING
			struct CheckSum
			{
				static constexpr uint16_t tag{ 10 };
			};

			// ClOrdID(11): STRING
			struct ClOrdID
			{
				static constexpr uint16_t tag{ 11 };
			};

			// Commission(12): AMT
			struct Commission
			{
				static constexpr uint16_t tag{ 12 };
			};

			// CommType(13): CHAR
			struct CommType
			{
				static constexpr uint16_t tag{ 13 };
				static constexpr char PER_SHARE{ '1' };
				static constexpr char PERCENTAGE{ '2' };
				static constexpr char ABSOLUTE{ '3' };
			};

			// CumQty(14): QTY
			struct CumQty
			{
				static constexpr uint16_t tag{ 14 };
			};

			// Currency(15): CURRENCY
			struct Currency
			{
				static constexpr uint16_t tag{ 15 };
			};

			// EndSeqNo(16): INT
			struct EndSeqNo
			{
				static constexpr uint16_t tag{ 16 };
			};

			// ExecID(17): STRING
			struct ExecID
			{
				static constexpr uint16_t tag{ 17 };
			};

			// ExecInst(18): MULTIPLEVALUESTRING
			struct ExecInst
			{
				static constexpr uint16_t tag{ 18 };
				static inline const std::string STAY_ON_OFFERSIDE{ "0" };
				static inline const std::string NOT_HELD{ "1" };
				static inline const std::string WORK{ "2" };
				static inline const std::string GO_ALONG{ "3" };
				static inline const std::string OVER_THE_DAY{ "4" };
				static inline const std::string HELD{ "5" };
				static inline const std::string PARTICIPATE_DONT_INITIATE{ "6" };
				static inline const std::string STRICT_SCALE{ "7" };
				static inline const std::string TRY_TO_SCALE{ "8" };
				static inline const std::string STAY_ON_BIDSIDE{ "9" };
				static inline const std::string NO_CROSS{ "A" };
				static inline const std::string OK_TO_CROSS{ "B" };
				static inline const std::string CALL_FIRST{ "C" };
				static inline const std::string PERCENT_OF_VOLUME{ "D" };
				static inline const std::string DO_NOT_INCREASE{ "E" };
				static inline const std::string DO_NOT_REDUCE{ "F" };
				static inline const std::string ALL_OR_NONE{ "G" };
				static inline const std::string INSTITUTIONS_ONLY{ "I" };
				static inline const std::string LAST_PEG{ "L" };
				static inline const std::string MID_PRICE_PEG{ "M" };
				static inline const std::string NON_NEGOTIABLE{ "N" };
				static inline const std::string OPENING_PEG{ "O" };
				static inline const std::string MARKET_PEG{ "P" };
				static inline const std::string PRIMARY_PEG{ "R" };
				static inline const std::string SUSPEND{ "S" };
				static inline const std::string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER{ "T" };
				static inline const std::string CUSTOMER_DISPLAY_INSTRUCTION{ "U" };
				static inline const std::string NETTING{ "V" };
				static inline const std::string PEG_TO_VWAP{ "W" };
			};

			// ExecRefID(19): STRING
			struct ExecRefID
			{
				static constexpr uint16_t tag{ 19 };
			};

			// ExecTransType(20): CHAR
			struct ExecTransType
			{
				static constexpr uint16_t tag{ 20 };
				static constexpr char NEW{ '0' };
				static constexpr char CANCEL{ '1' };
				static constexpr char CORRECT{ '2' };
				static constexpr char STATUS{ '3' };
			};

			// HandlInst(21): CHAR
			struct HandlInst
			{
				static constexpr uint16_t tag{ 21 };
				static constexpr char AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTION{ '1' };
				static constexpr char AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OK{ '2' };
				static constexpr char MANUAL_ORDER_BEST_EXECUTION{ '3' };
			};

			// IDSource(22): STRING
			struct IDSource
			{
				static constexpr uint16_t tag{ 22 };
				static inline const std::string CUSIP{ "1" };
				static inline const std::string SEDOL{ "2" };
				static inline const std::string QUIK{ "3" };
				static inline const std::string ISIN_NUMBER{ "4" };
				static inline const std::string RIC_CODE{ "5" };
				static inline const std::string ISO_CURRENCY_CODE{ "6" };
				static inline const std::string ISO_COUNTRY_CODE{ "7" };
				static inline const std::string EXCHANGE_SYMBOL{ "8" };
				static inline const std::string CONSOLIDATED_TAPE_ASSOCIATION{ "9" };
			};

			// IOIid(23): STRING
			struct IOIid
			{
				static constexpr uint16_t tag{ 23 };
			};

			// IOIOthSvc(24): CHAR
			struct IOIOthSvc
			{
				static constexpr uint16_t tag{ 24 };
			};

			// IOIQltyInd(25): CHAR
			struct IOIQltyInd
			{
				static constexpr uint16_t tag{ 25 };
				static constexpr char HIGH{ 'H' };
				static constexpr char LOW{ 'L' };
				static constexpr char MEDIUM{ 'M' };
			};

			// IOIRefID(26): STRING
			struct IOIRefID
			{
				static constexpr uint16_t tag{ 26 };
			};

			// IOIShares(27): STRING
			struct IOIShares
			{
				static constexpr uint16_t tag{ 27 };
				static inline const std::string LARGE{ "L" };
				static inline const std::string MEDIUM{ "M" };
				static inline const std::string SMALL{ "S" };
			};

			// IOITransType(28): CHAR
			struct IOITransType
			{
				static constexpr uint16_t tag{ 28 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NEW{ 'N' };
				static constexpr char REPLACE{ 'R' };
			};

			// LastCapacity(29): CHAR
			struct LastCapacity
			{
				static constexpr uint16_t tag{ 29 };
				static constexpr char AGENT{ '1' };
				static constexpr char CROSS_AS_AGENT{ '2' };
				static constexpr char CROSS_AS_PRINCIPAL{ '3' };
				static constexpr char PRINCIPAL{ '4' };
			};

			// LastMkt(30): EXCHANGE
			struct LastMkt
			{
				static constexpr uint16_t tag{ 30 };
			};

			// LastPx(31): PRICE
			struct LastPx
			{
				static constexpr uint16_t tag{ 31 };
			};

			// LastShares(32): QTY
			struct LastShares
			{
				static constexpr uint16_t tag{ 32 };
			};

			// LinesOfText(33): INT
			struct LinesOfText
			{
				static constexpr uint16_t tag{ 33 };
			};

			// MsgSeqNum(34): INT
			struct MsgSeqNum
			{
				static constexpr uint16_t tag{ 34 };
			};

			// MsgType(35): STRING
			struct MsgType
			{
				static constexpr uint16_t tag{ 35 };
				static inline const std::string HEARTBEAT{ "0" };
				static inline const std::string TEST_REQUEST{ "1" };
				static inline const std::string RESEND_REQUEST{ "2" };
				static inline const std::string REJECT{ "3" };
				static inline const std::string SEQUENCE_RESET{ "4" };
				static inline const std::string LOGOUT{ "5" };
				static inline const std::string INDICATION_OF_INTEREST{ "6" };
				static inline const std::string ADVERTISEMENT{ "7" };
				static inline const std::string EXECUTION_REPORT{ "8" };
				static inline const std::string ORDER_CANCEL_REJECT{ "9" };
				static inline const std::string QUOTE_STATUS_REQUEST{ "a" };
				static inline const std::string LOGON{ "A" };
				static inline const std::string NEWS{ "B" };
				static inline const std::string QUOTE_ACKNOWLEDGEMENT{ "b" };
				static inline const std::string EMAIL{ "C" };
				static inline const std::string SECURITY_DEFINITION_REQUEST{ "c" };
				static inline const std::string ORDER_SINGLE{ "D" };
				static inline const std::string SECURITY_DEFINITION{ "d" };
				static inline const std::string ORDER_LIST{ "E" };
				static inline const std::string SECURITY_STATUS_REQUEST{ "e" };
				static inline const std::string SECURITY_STATUS{ "f" };
				static inline const std::string ORDER_CANCEL_REQUEST{ "F" };
				static inline const std::string ORDER_CANCEL_REPLACE_REQUEST{ "G" };
				static inline const std::string TRADING_SESSION_STATUS_REQUEST{ "g" };
				static inline const std::string ORDER_STATUS_REQUEST{ "H" };
				static inline const std::string TRADING_SESSION_STATUS{ "h" };
				static inline const std::string MASS_QUOTE{ "i" };
				static inline const std::string BUSINESS_MESSAGE_REJECT{ "j" };
				static inline const std::string ALLOCATION{ "J" };
				static inline const std::string LIST_CANCEL_REQUEST{ "K" };
				static inline const std::string BID_REQUEST{ "k" };
				static inline const std::string BID_RESPONSE{ "l" };
				static inline const std::string LIST_EXECUTE{ "L" };
				static inline const std::string LIST_STRIKE_PRICE{ "m" };
				static inline const std::string LIST_STATUS_REQUEST{ "M" };
				static inline const std::string LIST_STATUS{ "N" };
				static inline const std::string ALLOCATION_ACK{ "P" };
				static inline const std::string DONT_KNOW_TRADE{ "Q" };
				static inline const std::string QUOTE_REQUEST{ "R" };
				static inline const std::string QUOTE{ "S" };
				static inline const std::string SETTLEMENT_INSTRUCTIONS{ "T" };
				static inline const std::string MARKET_DATA_REQUEST{ "V" };
				static inline const std::string MARKET_DATA_SNAPSHOT_FULL_REFRESH{ "W" };
				static inline const std::string MARKET_DATA_INCREMENTAL_REFRESH{ "X" };
				static inline const std::string MARKET_DATA_REQUEST_REJECT{ "Y" };
				static inline const std::string QUOTE_CANCEL{ "Z" };
			};

			// NewSeqNo(36): INT
			struct NewSeqNo
			{
				static constexpr uint16_t tag{ 36 };
			};

			// OrderID(37): STRING
			struct OrderID
			{
				static constexpr uint16_t tag{ 37 };
			};

			// OrderQty(38): QTY
			struct OrderQty
			{
				static constexpr uint16_t tag{ 38 };
			};

			// OrdStatus(39): CHAR
			struct OrdStatus
			{
				static constexpr uint16_t tag{ 39 };
				static constexpr char NEW{ '0' };
				static constexpr char PARTIALLY_FILLED{ '1' };
				static constexpr char FILLED{ '2' };
				static constexpr char DONE_FOR_DAY{ '3' };
				static constexpr char CANCELED{ '4' };
				static constexpr char REPLACED{ '5' };
				static constexpr char PENDING_CANCEL{ '6' };
				static constexpr char STOPPED{ '7' };
				static constexpr char REJECTED{ '8' };
				static constexpr char SUSPENDED{ '9' };
				static constexpr char PENDING_NEW{ 'A' };
				static constexpr char CALCULATED{ 'B' };
				static constexpr char EXPIRED{ 'C' };
				static constexpr char ACCEPTED_FOR_BIDDING{ 'D' };
				static constexpr char PENDING_REPLACE{ 'E' };
			};

			// OrdType(40): CHAR
			struct OrdType
			{
				static constexpr uint16_t tag{ 40 };
				static constexpr char MARKET{ '1' };
				static constexpr char LIMIT{ '2' };
				static constexpr char STOP{ '3' };
				static constexpr char STOP_LIMIT{ '4' };
				static constexpr char MARKET_ON_CLOSE{ '5' };
				static constexpr char WITH_OR_WITHOUT{ '6' };
				static constexpr char LIMIT_OR_BETTER{ '7' };
				static constexpr char LIMIT_WITH_OR_WITHOUT{ '8' };
				static constexpr char ON_BASIS{ '9' };
				static constexpr char ON_CLOSE{ 'A' };
				static constexpr char LIMIT_ON_CLOSE{ 'B' };
				static constexpr char FOREX_C{ 'C' };
				static constexpr char PREVIOUSLY_QUOTED{ 'D' };
				static constexpr char PREVIOUSLY_INDICATED{ 'E' };
				static constexpr char FOREX_F{ 'F' };
				static constexpr char FOREX_G{ 'G' };
				static constexpr char FOREX_H{ 'H' };
				static constexpr char FUNARI{ 'I' };
				static constexpr char PEGGED{ 'P' };
			};

			// OrigClOrdID(41): STRING
			struct OrigClOrdID
			{
				static constexpr uint16_t tag{ 41 };
			};

			// OrigTime(42): UTCTIMESTAMP
			struct OrigTime
			{
				static constexpr uint16_t tag{ 42 };
			};

			// PossDupFlag(43): BOOLEAN
			struct PossDupFlag
			{
				static constexpr uint16_t tag{ 43 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// Price(44): PRICE
			struct Price
			{
				static constexpr uint16_t tag{ 44 };
			};

			// RefSeqNum(45): INT
			struct RefSeqNum
			{
				static constexpr uint16_t tag{ 45 };
			};

			// RelatdSym(46): STRING
			struct RelatdSym
			{
				static constexpr uint16_t tag{ 46 };
			};

			// Rule80A(47): CHAR
			struct Rule80A
			{
				static constexpr uint16_t tag{ 47 };
				static constexpr char AGENCY_SINGLE_ORDER{ 'A' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_B{ 'B' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_MEMBER_FIRM_ORG{ 'C' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM_ORG{ 'D' };
				static constexpr char REGISTERED_EQUITY_MARKET_MAKER_TRADES{ 'E' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_F{ 'F' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_H{ 'H' };
				static constexpr char INDIVIDUAL_INVESTOR_SINGLE_ORDER{ 'I' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER{ 'J' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER{ 'K' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADE{ 'L' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBER{ 'M' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_MEMBER{ 'N' };
				static constexpr char COMPETING_DEALER_TRADES_O{ 'O' };
				static constexpr char PRINCIPAL{ 'P' };
				static constexpr char COMPETING_DEALER_TRADES_R{ 'R' };
				static constexpr char SPECIALIST_TRADES{ 'S' };
				static constexpr char COMPETING_DEALER_TRADES_T{ 'T' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_AGENCY{ 'U' };
				static constexpr char ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBER{ 'W' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_NOT_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADE{ 'X' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_AGENCY{ 'Y' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_NON_MEMBER_COMPETING_MARKET_MAKER{ 'Z' };
			};

			// SecurityID(48): STRING
			struct SecurityID
			{
				static constexpr uint16_t tag{ 48 };
			};

			// SenderCompID(49): STRING
			struct SenderCompID
			{
				static constexpr uint16_t tag{ 49 };
			};

			// SenderSubID(50): STRING
			struct SenderSubID
			{
				static constexpr uint16_t tag{ 50 };
			};

			// SendingDate(51): LOCALMKTDATE
			struct SendingDate
			{
				static constexpr uint16_t tag{ 51 };
			};

			// SendingTime(52): UTCTIMESTAMP
			struct SendingTime
			{
				static constexpr uint16_t tag{ 52 };
			};

			// Shares(53): QTY
			struct Shares
			{
				static constexpr uint16_t tag{ 53 };
			};

			// Side(54): CHAR
			struct Side
			{
				static constexpr uint16_t tag{ 54 };
				static constexpr char BUY{ '1' };
				static constexpr char SELL{ '2' };
				static constexpr char BUY_MINUS{ '3' };
				static constexpr char SELL_PLUS{ '4' };
				static constexpr char SELL_SHORT{ '5' };
				static constexpr char SELL_SHORT_EXEMPT{ '6' };
				static constexpr char UNDISCLOSED{ '7' };
				static constexpr char CROSS{ '8' };
				static constexpr char CROSS_SHORT{ '9' };
			};

			// Symbol(55): STRING
			struct Symbol
			{
				static constexpr uint16_t tag{ 55 };
			};

			// TargetCompID(56): STRING
			struct TargetCompID
			{
				static constexpr uint16_t tag{ 56 };
			};

			// TargetSubID(57): STRING
			struct TargetSubID
			{
				static constexpr uint16_t tag{ 57 };
			};

			// Text(58): STRING
			struct Text
			{
				static constexpr uint16_t tag{ 58 };
			};

			// TimeInForce(59): CHAR
			struct TimeInForce
			{
				static constexpr uint16_t tag{ 59 };
				static constexpr char DAY{ '0' };
				static constexpr char GOOD_TILL_CANCEL{ '1' };
				static constexpr char AT_THE_OPENING{ '2' };
				static constexpr char IMMEDIATE_OR_CANCEL{ '3' };
				static constexpr char FILL_OR_KILL{ '4' };
				static constexpr char GOOD_TILL_CROSSING{ '5' };
				static constexpr char GOOD_TILL_DATE{ '6' };
			};

			// TransactTime(60): UTCTIMESTAMP
			struct TransactTime
			{
				static constexpr uint16_t tag{ 60 };
			};

			// Urgency(61): CHAR
			struct Urgency
			{
				static constexpr uint16_t tag{ 61 };
				static constexpr char NORMAL{ '0' };
				static constexpr char FLASH{ '1' };
				static constexpr char BACKGROUND{ '2' };
			};

			// ValidUntilTime(62): UTCTIMESTAMP
			struct ValidUntilTime
			{
				static constexpr uint16_t tag{ 62 };
			};

			// SettlmntTyp(63): CHAR
			struct SettlmntTyp
			{
				static constexpr uint16_t tag{ 63 };
				static constexpr char REGULAR{ '0' };
				static constexpr char CASH{ '1' };
				static constexpr char NEXT_DAY{ '2' };
				static constexpr char T_PLUS_2{ '3' };
				static constexpr char T_PLUS_3{ '4' };
				static constexpr char T_PLUS_4{ '5' };
				static constexpr char FUTURE{ '6' };
				static constexpr char WHEN_ISSUED{ '7' };
				static constexpr char SELLERS_OPTION{ '8' };
				static constexpr char T_PLUS_5{ '9' };
			};

			// FutSettDate(64): LOCALMKTDATE
			struct FutSettDate
			{
				static constexpr uint16_t tag{ 64 };
			};

			// SymbolSfx(65): STRING
			struct SymbolSfx
			{
				static constexpr uint16_t tag{ 65 };
			};

			// ListID(66): STRING
			struct ListID
			{
				static constexpr uint16_t tag{ 66 };
			};

			// ListSeqNo(67): INT
			struct ListSeqNo
			{
				static constexpr uint16_t tag{ 67 };
			};

			// TotNoOrders(68): INT
			struct TotNoOrders
			{
				static constexpr uint16_t tag{ 68 };
			};

			// ListExecInst(69): STRING
			struct ListExecInst
			{
				static constexpr uint16_t tag{ 69 };
			};

			// AllocID(70): STRING
			struct AllocID
			{
				static constexpr uint16_t tag{ 70 };
			};

			// AllocTransType(71): CHAR
			struct AllocTransType
			{
				static constexpr uint16_t tag{ 71 };
				static constexpr char NEW{ '0' };
				static constexpr char REPLACE{ '1' };
				static constexpr char CANCEL{ '2' };
				static constexpr char PRELIMINARY{ '3' };
				static constexpr char CALCULATED{ '4' };
				static constexpr char CALCULATED_WITHOUT_PRELIMINARY{ '5' };
			};

			// RefAllocID(72): STRING
			struct RefAllocID
			{
				static constexpr uint16_t tag{ 72 };
			};

			// NoOrders(73): INT
			struct NoOrders
			{
				static constexpr uint16_t tag{ 73 };
			};

			// AvgPrxPrecision(74): INT
			struct AvgPrxPrecision
			{
				static constexpr uint16_t tag{ 74 };
			};

			// TradeDate(75): LOCALMKTDATE
			struct TradeDate
			{
				static constexpr uint16_t tag{ 75 };
			};

			// ExecBroker(76): STRING
			struct ExecBroker
			{
				static constexpr uint16_t tag{ 76 };
			};

			// OpenClose(77): CHAR
			struct OpenClose
			{
				static constexpr uint16_t tag{ 77 };
				static constexpr char CLOSE{ 'C' };
				static constexpr char OPEN{ 'O' };
			};

			// NoAllocs(78): INT
			struct NoAllocs
			{
				static constexpr uint16_t tag{ 78 };
			};

			// AllocAccount(79): STRING
			struct AllocAccount
			{
				static constexpr uint16_t tag{ 79 };
			};

			// AllocShares(80): QTY
			struct AllocShares
			{
				static constexpr uint16_t tag{ 80 };
			};

			// ProcessCode(81): CHAR
			struct ProcessCode
			{
				static constexpr uint16_t tag{ 81 };
				static constexpr char REGULAR{ '0' };
				static constexpr char SOFT_DOLLAR{ '1' };
				static constexpr char STEP_IN{ '2' };
				static constexpr char STEP_OUT{ '3' };
				static constexpr char SOFT_DOLLAR_STEP_IN{ '4' };
				static constexpr char SOFT_DOLLAR_STEP_OUT{ '5' };
				static constexpr char PLAN_SPONSOR{ '6' };
			};

			// NoRpts(82): INT
			struct NoRpts
			{
				static constexpr uint16_t tag{ 82 };
			};

			// RptSeq(83): INT
			struct RptSeq
			{
				static constexpr uint16_t tag{ 83 };
			};

			// CxlQty(84): QTY
			struct CxlQty
			{
				static constexpr uint16_t tag{ 84 };
			};

			// NoDlvyInst(85): INT
			struct NoDlvyInst
			{
				static constexpr uint16_t tag{ 85 };
			};

			// DlvyInst(86): STRING
			struct DlvyInst
			{
				static constexpr uint16_t tag{ 86 };
			};

			// AllocStatus(87): INT
			struct AllocStatus
			{
				static constexpr uint16_t tag{ 87 };
				static constexpr int32_t ACCEPTED{ 0 };
				static constexpr int32_t REJECTED{ 1 };
				static constexpr int32_t PARTIAL_ACCEPT{ 2 };
				static constexpr int32_t RECEIVED{ 3 };
			};

			// AllocRejCode(88): INT
			struct AllocRejCode
			{
				static constexpr uint16_t tag{ 88 };
				static constexpr int32_t UNKNOWN_ACCOUNT{ 0 };
				static constexpr int32_t INCORRECT_QUANTITY{ 1 };
				static constexpr int32_t INCORRECT_AVERAGE_PRICE{ 2 };
				static constexpr int32_t UNKNOWN_EXECUTING_BROKER_MNEMONIC{ 3 };
				static constexpr int32_t COMMISSION_DIFFERENCE{ 4 };
				static constexpr int32_t UNKNOWN_ORDERID{ 5 };
				static constexpr int32_t UNKNOWN_LISTID{ 6 };
				static constexpr int32_t OTHER{ 7 };
			};

			// Signature(89): DATA
			struct Signature
			{
				static constexpr uint16_t tag{ 89 };
			};

			// SecureDataLen(90): LENGTH
			struct SecureDataLen
			{
				static constexpr uint16_t tag{ 90 };
			};

			// SecureData(91): DATA
			struct SecureData
			{
				static constexpr uint16_t tag{ 91 };
			};

			// BrokerOfCredit(92): STRING
			struct BrokerOfCredit
			{
				static constexpr uint16_t tag{ 92 };
			};

			// SignatureLength(93): LENGTH
			struct SignatureLength
			{
				static constexpr uint16_t tag{ 93 };
			};

			// EmailType(94): CHAR
			struct EmailType
			{
				static constexpr uint16_t tag{ 94 };
				static constexpr char NEW{ '0' };
				static constexpr char REPLY{ '1' };
				static constexpr char ADMIN_REPLY{ '2' };
			};

			// RawDataLength(95): LENGTH
			struct RawDataLength
			{
				static constexpr uint16_t tag{ 95 };
			};

			// RawData(96): DATA
			struct RawData
			{
				static constexpr uint16_t tag{ 96 };
			};

			// PossResend(97): BOOLEAN
			struct PossResend
			{
				static constexpr uint16_t tag{ 97 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// EncryptMethod(98): INT
			struct EncryptMethod
			{
				static constexpr uint16_t tag{ 98 };
				static constexpr int32_t NONE{ 0 };
				static constexpr int32_t PKCS{ 1 };
				static constexpr int32_t DES{ 2 };
				static constexpr int32_t PKCS_DES{ 3 };
				static constexpr int32_t PGP_DES{ 4 };
				static constexpr int32_t PGP_DES_MD5{ 5 };
				static constexpr int32_t PEM_DES_MD5{ 6 };
			};

			// StopPx(99): PRICE
			struct StopPx
			{
				static constexpr uint16_t tag{ 99 };
			};

			// ExDestination(100): EXCHANGE
			struct ExDestination
			{
				static constexpr uint16_t tag{ 100 };
			};

			// CxlRejReason(102): INT
			struct CxlRejReason
			{
				static constexpr uint16_t tag{ 102 };
				static constexpr int32_t TOO_LATE_TO_CANCEL{ 0 };
				static constexpr int32_t UNKNOWN_ORDER{ 1 };
				static constexpr int32_t BROKER_OPTION{ 2 };
				static constexpr int32_t ORDER_ALREADY_IN_PENDING_CANCEL_OR_PENDING_REPLACE_STATUS{ 3 };
			};

			// OrdRejReason(103): INT
			struct OrdRejReason
			{
				static constexpr uint16_t tag{ 103 };
				static constexpr int32_t BROKER_OPTION{ 0 };
				static constexpr int32_t UNKNOWN_SYMBOL{ 1 };
				static constexpr int32_t EXCHANGE_CLOSED{ 2 };
				static constexpr int32_t ORDER_EXCEEDS_LIMIT{ 3 };
				static constexpr int32_t TOO_LATE_TO_ENTER{ 4 };
				static constexpr int32_t UNKNOWN_ORDER{ 5 };
				static constexpr int32_t DUPLICATE_ORDER{ 6 };
				static constexpr int32_t DUPLICATE_OF_A_VERBALLY_COMMUNICATED_ORDER{ 7 };
				static constexpr int32_t STALE_ORDER{ 8 };
			};

			// IOIQualifier(104): CHAR
			struct IOIQualifier
			{
				static constexpr uint16_t tag{ 104 };
				static constexpr char ALL_OR_NONE{ 'A' };
				static constexpr char AT_THE_CLOSE{ 'C' };
				static constexpr char IN_TOUCH_WITH{ 'I' };
				static constexpr char LIMIT{ 'L' };
				static constexpr char MORE_BEHIND{ 'M' };
				static constexpr char AT_THE_OPEN{ 'O' };
				static constexpr char TAKING_A_POSITION{ 'P' };
				static constexpr char AT_THE_MARKET{ 'Q' };
				static constexpr char READY_TO_TRADE{ 'R' };
				static constexpr char PORTFOLIO_SHOW_N{ 'S' };
				static constexpr char THROUGH_THE_DAY{ 'T' };
				static constexpr char VERSUS{ 'V' };
				static constexpr char INDICATION{ 'W' };
				static constexpr char CROSSING_OPPORTUNITY{ 'X' };
				static constexpr char AT_THE_MIDPOINT{ 'Y' };
				static constexpr char PRE_OPEN{ 'Z' };
			};

			// WaveNo(105): STRING
			struct WaveNo
			{
				static constexpr uint16_t tag{ 105 };
			};

			// Issuer(106): STRING
			struct Issuer
			{
				static constexpr uint16_t tag{ 106 };
			};

			// SecurityDesc(107): STRING
			struct SecurityDesc
			{
				static constexpr uint16_t tag{ 107 };
			};

			// HeartBtInt(108): INT
			struct HeartBtInt
			{
				static constexpr uint16_t tag{ 108 };
			};

			// ClientID(109): STRING
			struct ClientID
			{
				static constexpr uint16_t tag{ 109 };
			};

			// MinQty(110): QTY
			struct MinQty
			{
				static constexpr uint16_t tag{ 110 };
			};

			// MaxFloor(111): QTY
			struct MaxFloor
			{
				static constexpr uint16_t tag{ 111 };
			};

			// TestReqID(112): STRING
			struct TestReqID
			{
				static constexpr uint16_t tag{ 112 };
			};

			// ReportToExch(113): BOOLEAN
			struct ReportToExch
			{
				static constexpr uint16_t tag{ 113 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// LocateReqd(114): BOOLEAN
			struct LocateReqd
			{
				static constexpr uint16_t tag{ 114 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// OnBehalfOfCompID(115): STRING
			struct OnBehalfOfCompID
			{
				static constexpr uint16_t tag{ 115 };
			};

			// OnBehalfOfSubID(116): STRING
			struct OnBehalfOfSubID
			{
				static constexpr uint16_t tag{ 116 };
			};

			// QuoteID(117): STRING
			struct QuoteID
			{
				static constexpr uint16_t tag{ 117 };
			};

			// NetMoney(118): AMT
			struct NetMoney
			{
				static constexpr uint16_t tag{ 118 };
			};

			// SettlCurrAmt(119): AMT
			struct SettlCurrAmt
			{
				static constexpr uint16_t tag{ 119 };
			};

			// SettlCurrency(120): CURRENCY
			struct SettlCurrency
			{
				static constexpr uint16_t tag{ 120 };
			};

			// ForexReq(121): BOOLEAN
			struct ForexReq
			{
				static constexpr uint16_t tag{ 121 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// OrigSendingTime(122): UTCTIMESTAMP
			struct OrigSendingTime
			{
				static constexpr uint16_t tag{ 122 };
			};

			// GapFillFlag(123): BOOLEAN
			struct GapFillFlag
			{
				static constexpr uint16_t tag{ 123 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// NoExecs(124): INT
			struct NoExecs
			{
				static constexpr uint16_t tag{ 124 };
			};

			// CxlType(125):  CHAR
			struct CxlType
			{
				static constexpr uint16_t tag{ 125 };
			};

			// ExpireTime(126): UTCTIMESTAMP
			struct ExpireTime
			{
				static constexpr uint16_t tag{ 126 };
			};

			// DKReason(127): CHAR
			struct DKReason
			{
				static constexpr uint16_t tag{ 127 };
				static constexpr char UNKNOWN_SYMBOL{ 'A' };
				static constexpr char WRONG_SIDE{ 'B' };
				static constexpr char QUANTITY_EXCEEDS_ORDER{ 'C' };
				static constexpr char NO_MATCHING_ORDER{ 'D' };
				static constexpr char PRICE_EXCEEDS_LIMIT{ 'E' };
				static constexpr char OTHER{ 'Z' };
			};

			// DeliverToCompID(128): STRING
			struct DeliverToCompID
			{
				static constexpr uint16_t tag{ 128 };
			};

			// DeliverToSubID(129): STRING
			struct DeliverToSubID
			{
				static constexpr uint16_t tag{ 129 };
			};

			// IOINaturalFlag(130): BOOLEAN
			struct IOINaturalFlag
			{
				static constexpr uint16_t tag{ 130 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// QuoteReqID(131): STRING
			struct QuoteReqID
			{
				static constexpr uint16_t tag{ 131 };
			};

			// BidPx(132): PRICE
			struct BidPx
			{
				static constexpr uint16_t tag{ 132 };
			};

			// OfferPx(133): PRICE
			struct OfferPx
			{
				static constexpr uint16_t tag{ 133 };
			};

			// BidSize(134): QTY
			struct BidSize
			{
				static constexpr uint16_t tag{ 134 };
			};

			// OfferSize(135): QTY
			struct OfferSize
			{
				static constexpr uint16_t tag{ 135 };
			};

			// NoMiscFees(136): INT
			struct NoMiscFees
			{
				static constexpr uint16_t tag{ 136 };
			};

			// MiscFeeAmt(137): AMT
			struct MiscFeeAmt
			{
				static constexpr uint16_t tag{ 137 };
			};

			// MiscFeeCurr(138): CURRENCY
			struct MiscFeeCurr
			{
				static constexpr uint16_t tag{ 138 };
			};

			// MiscFeeType(139): CHAR
			struct MiscFeeType
			{
				static constexpr uint16_t tag{ 139 };
				static constexpr char REGULATORY{ '1' };
				static constexpr char TAX{ '2' };
				static constexpr char LOCAL_COMMISSION{ '3' };
				static constexpr char EXCHANGE_FEES{ '4' };
				static constexpr char STAMP{ '5' };
				static constexpr char LEVY{ '6' };
				static constexpr char OTHER{ '7' };
				static constexpr char MARKUP{ '8' };
				static constexpr char CONSUMPTION_TAX{ '9' };
			};

			// PrevClosePx(140): PRICE
			struct PrevClosePx
			{
				static constexpr uint16_t tag{ 140 };
			};

			// ResetSeqNumFlag(141): BOOLEAN
			struct ResetSeqNumFlag
			{
				static constexpr uint16_t tag{ 141 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// SenderLocationID(142): STRING
			struct SenderLocationID
			{
				static constexpr uint16_t tag{ 142 };
			};

			// TargetLocationID(143): STRING
			struct TargetLocationID
			{
				static constexpr uint16_t tag{ 143 };
			};

			// OnBehalfOfLocationID(144): STRING
			struct OnBehalfOfLocationID
			{
				static constexpr uint16_t tag{ 144 };
			};

			// DeliverToLocationID(145): STRING
			struct DeliverToLocationID
			{
				static constexpr uint16_t tag{ 145 };
			};

			// NoRelatedSym(146): INT
			struct NoRelatedSym
			{
				static constexpr uint16_t tag{ 146 };
			};

			// Subject(147): STRING
			struct Subject
			{
				static constexpr uint16_t tag{ 147 };
			};

			// Headline(148): STRING
			struct Headline
			{
				static constexpr uint16_t tag{ 148 };
			};

			// URLLink(149): STRING
			struct URLLink
			{
				static constexpr uint16_t tag{ 149 };
			};

			// ExecType(150): CHAR
			struct ExecType
			{
				static constexpr uint16_t tag{ 150 };
				static constexpr char NEW{ '0' };
				static constexpr char PARTIAL_FILL{ '1' };
				static constexpr char FILL{ '2' };
				static constexpr char DONE_FOR_DAY{ '3' };
				static constexpr char CANCELED{ '4' };
				static constexpr char REPLACE{ '5' };
				static constexpr char PENDING_CANCEL{ '6' };
				static constexpr char STOPPED{ '7' };
				static constexpr char REJECTED{ '8' };
				static constexpr char SUSPENDED{ '9' };
				static constexpr char PENDING_NEW{ 'A' };
				static constexpr char CALCULATED{ 'B' };
				static constexpr char EXPIRED{ 'C' };
				static constexpr char RESTATED{ 'D' };
				static constexpr char PENDING_REPLACE{ 'E' };
			};

			// LeavesQty(151): QTY
			struct LeavesQty
			{
				static constexpr uint16_t tag{ 151 };
			};

			// CashOrderQty(152): QTY
			struct CashOrderQty
			{
				static constexpr uint16_t tag{ 152 };
			};

			// AllocAvgPx(153): PRICE
			struct AllocAvgPx
			{
				static constexpr uint16_t tag{ 153 };
			};

			// AllocNetMoney(154): AMT
			struct AllocNetMoney
			{
				static constexpr uint16_t tag{ 154 };
			};

			// SettlCurrFxRate(155): FLOAT
			struct SettlCurrFxRate
			{
				static constexpr uint16_t tag{ 155 };
			};

			// SettlCurrFxRateCalc(156): CHAR
			struct SettlCurrFxRateCalc
			{
				static constexpr uint16_t tag{ 156 };
				static constexpr char MULTIPLY{ 'M' };
				static constexpr char DIVIDE{ 'D' };
			};

			// NumDaysInterest(157): INT
			struct NumDaysInterest
			{
				static constexpr uint16_t tag{ 157 };
			};

			// AccruedInterestRate(158): FLOAT
			struct AccruedInterestRate
			{
				static constexpr uint16_t tag{ 158 };
			};

			// AccruedInterestAmt(159): AMT
			struct AccruedInterestAmt
			{
				static constexpr uint16_t tag{ 159 };
			};

			// SettlInstMode(160): CHAR
			struct SettlInstMode
			{
				static constexpr uint16_t tag{ 160 };
				static constexpr char DEFAULT{ '0' };
				static constexpr char STANDING_INSTRUCTIONS_PROVIDED{ '1' };
				static constexpr char SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDING{ '2' };
				static constexpr char SPECIFIC_ALLOCATION_ACCOUNT_STANDING{ '3' };
			};

			// AllocText(161): STRING
			struct AllocText
			{
				static constexpr uint16_t tag{ 161 };
			};

			// SettlInstID(162): STRING
			struct SettlInstID
			{
				static constexpr uint16_t tag{ 162 };
			};

			// SettlInstTransType(163): CHAR
			struct SettlInstTransType
			{
				static constexpr uint16_t tag{ 163 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NEW{ 'N' };
				static constexpr char REPLACE{ 'R' };
			};

			// EmailThreadID(164): STRING
			struct EmailThreadID
			{
				static constexpr uint16_t tag{ 164 };
			};

			// SettlInstSource(165): CHAR
			struct SettlInstSource
			{
				static constexpr uint16_t tag{ 165 };
				static constexpr char BROKERS_INSTRUCTIONS{ '1' };
				static constexpr char INSTITUTIONS_INSTRUCTIONS{ '2' };
			};

			// SettlLocation(166): STRING
			struct SettlLocation
			{
				static constexpr uint16_t tag{ 166 };
				static inline const std::string CEDEL{ "CED" };
				static inline const std::string DEPOSITORY_TRUST_COMPANY{ "DTC" };
				static inline const std::string EUROCLEAR{ "EUR" };
				static inline const std::string FEDERAL_BOOK_ENTRY{ "FED" };
				static inline const std::string LOCAL_MARKET_SETTLE_LOCATION{ "ISO Country Code" };
				static inline const std::string PHYSICAL{ "PNY" };
				static inline const std::string PARTICIPANT_TRUST_COMPANY{ "PTC" };
			};

			// SecurityType(167): STRING
			struct SecurityType
			{
				static constexpr uint16_t tag{ 167 };
				static inline const std::string WILDCARD_ENTRY{ "?" };
				static inline const std::string BANKERS_ACCEPTANCE{ "BA" };
				static inline const std::string CONVERTIBLE_BOND{ "CB" };
				static inline const std::string CERTIFICATE_OF_DEPOSIT{ "CD" };
				static inline const std::string COLLATERALIZE_MORTGAGE_OBLIGATION{ "CMO" };
				static inline const std::string CORPORATE_BOND{ "CORP" };
				static inline const std::string COMMERCIAL_PAPER{ "CP" };
				static inline const std::string CORPORATE_PRIVATE_PLACEMENT{ "CPP" };
				static inline const std::string COMMON_STOCK{ "CS" };
				static inline const std::string FEDERAL_HOUSING_AUTHORITY{ "FHA" };
				static inline const std::string FEDERAL_HOME_LOAN{ "FHL" };
				static inline const std::string FEDERAL_NATIONAL_MORTGAGE_ASSOCIATION{ "FN" };
				static inline const std::string FOREIGN_EXCHANGE_CONTRACT{ "FOR" };
				static inline const std::string FUTURE{ "FUT" };
				static inline const std::string GOVERNMENT_NATIONAL_MORTGAGE_ASSOCIATION{ "GN" };
				static inline const std::string TREASURIES_PLUS_AGENCY_DEBENTURE{ "GOVT" };
				static inline const std::string MORTGAGE_IOETTE{ "IET" };
				static inline const std::string MUTUAL_FUND{ "MF" };
				static inline const std::string MORTGAGE_INTEREST_ONLY{ "MIO" };
				static inline const std::string MORTGAGE_PRINCIPAL_ONLY{ "MPO" };
				static inline const std::string MORTGAGE_PRIVATE_PLACEMENT{ "MPP" };
				static inline const std::string MISCELLANEOUS_PASS_THRU{ "MPT" };
				static inline const std::string MUNICIPAL_BOND{ "MUNI" };
				static inline const std::string NO_ISITC_SECURITY_TYPE{ "NONE" };
				static inline const std::string OPTION{ "OPT" };
				static inline const std::string PREFERRED_STOCK{ "PS" };
				static inline const std::string REPURCHASE_AGREEMENT{ "RP" };
				static inline const std::string REVERSE_REPURCHASE_AGREEMENT{ "RVRP" };
				static inline const std::string STUDENT_LOAN_MARKETING_ASSOCIATION{ "SL" };
				static inline const std::string TIME_DEPOSIT{ "TD" };
				static inline const std::string US_TREASURY_BILL{ "USTB" };
				static inline const std::string WARRANT{ "WAR" };
				static inline const std::string CATS_TIGERS_LIONS{ "ZOO" };
			};

			// EffectiveTime(168): UTCTIMESTAMP
			struct EffectiveTime
			{
				static constexpr uint16_t tag{ 168 };
			};

			// StandInstDbType(169): INT
			struct StandInstDbType
			{
				static constexpr uint16_t tag{ 169 };
				static constexpr int32_t OTHER{ 0 };
				static constexpr int32_t DTC_SID{ 1 };
				static constexpr int32_t THOMSON_ALERT{ 2 };
				static constexpr int32_t A_GLOBAL_CUSTODIAN{ 3 };
			};

			// StandInstDbName(170): STRING
			struct StandInstDbName
			{
				static constexpr uint16_t tag{ 170 };
			};

			// StandInstDbID(171): STRING
			struct StandInstDbID
			{
				static constexpr uint16_t tag{ 171 };
			};

			// SettlDeliveryType(172): INT
			struct SettlDeliveryType
			{
				static constexpr uint16_t tag{ 172 };
			};

			// SettlDepositoryCode(173): STRING
			struct SettlDepositoryCode
			{
				static constexpr uint16_t tag{ 173 };
			};

			// SettlBrkrCode(174): STRING
			struct SettlBrkrCode
			{
				static constexpr uint16_t tag{ 174 };
			};

			// SettlInstCode(175): STRING
			struct SettlInstCode
			{
				static constexpr uint16_t tag{ 175 };
			};

			// SecuritySettlAgentName(176): STRING
			struct SecuritySettlAgentName
			{
				static constexpr uint16_t tag{ 176 };
			};

			// SecuritySettlAgentCode(177): STRING
			struct SecuritySettlAgentCode
			{
				static constexpr uint16_t tag{ 177 };
			};

			// SecuritySettlAgentAcctNum(178): STRING
			struct SecuritySettlAgentAcctNum
			{
				static constexpr uint16_t tag{ 178 };
			};

			// SecuritySettlAgentAcctName(179): STRING
			struct SecuritySettlAgentAcctName
			{
				static constexpr uint16_t tag{ 179 };
			};

			// SecuritySettlAgentContactName(180): STRING
			struct SecuritySettlAgentContactName
			{
				static constexpr uint16_t tag{ 180 };
			};

			// SecuritySettlAgentContactPhone(181): STRING
			struct SecuritySettlAgentContactPhone
			{
				static constexpr uint16_t tag{ 181 };
			};

			// CashSettlAgentName(182): STRING
			struct CashSettlAgentName
			{
				static constexpr uint16_t tag{ 182 };
			};

			// CashSettlAgentCode(183): STRING
			struct CashSettlAgentCode
			{
				static constexpr uint16_t tag{ 183 };
			};

			// CashSettlAgentAcctNum(184): STRING
			struct CashSettlAgentAcctNum
			{
				static constexpr uint16_t tag{ 184 };
			};

			// CashSettlAgentAcctName(185): STRING
			struct CashSettlAgentAcctName
			{
				static constexpr uint16_t tag{ 185 };
			};

			// CashSettlAgentContactName(186): STRING
			struct CashSettlAgentContactName
			{
				static constexpr uint16_t tag{ 186 };
			};

			// CashSettlAgentContactPhone(187): STRING
			struct CashSettlAgentContactPhone
			{
				static constexpr uint16_t tag{ 187 };
			};

			// BidSpotRate(188): PRICE
			struct BidSpotRate
			{
				static constexpr uint16_t tag{ 188 };
			};

			// BidForwardPoints(189): PRICEOFFSET
			struct BidForwardPoints
			{
				static constexpr uint16_t tag{ 189 };
			};

			// OfferSpotRate(190): PRICE
			struct OfferSpotRate
			{
				static constexpr uint16_t tag{ 190 };
			};

			// OfferForwardPoints(191): PRICEOFFSET
			struct OfferForwardPoints
			{
				static constexpr uint16_t tag{ 191 };
			};

			// OrderQty2(192): QTY
			struct OrderQty2
			{
				static constexpr uint16_t tag{ 192 };
			};

			// FutSettDate2(193): LOCALMKTDATE
			struct FutSettDate2
			{
				static constexpr uint16_t tag{ 193 };
			};

			// LastSpotRate(194): PRICE
			struct LastSpotRate
			{
				static constexpr uint16_t tag{ 194 };
			};

			// LastForwardPoints(195): PRICEOFFSET
			struct LastForwardPoints
			{
				static constexpr uint16_t tag{ 195 };
			};

			// AllocLinkID(196): STRING
			struct AllocLinkID
			{
				static constexpr uint16_t tag{ 196 };
			};

			// AllocLinkType(197): INT
			struct AllocLinkType
			{
				static constexpr uint16_t tag{ 197 };
				static constexpr int32_t F_X_NETTING{ 0 };
				static constexpr int32_t F_X_SWAP{ 1 };
			};

			// SecondaryOrderID(198): STRING
			struct SecondaryOrderID
			{
				static constexpr uint16_t tag{ 198 };
			};

			// NoIOIQualifiers(199): INT
			struct NoIOIQualifiers
			{
				static constexpr uint16_t tag{ 199 };
			};

			// MaturityMonthYear(200): MONTHYEAR
			struct MaturityMonthYear
			{
				static constexpr uint16_t tag{ 200 };
			};

			// PutOrCall(201): INT
			struct PutOrCall
			{
				static constexpr uint16_t tag{ 201 };
				static constexpr int32_t PUT{ 0 };
				static constexpr int32_t CALL{ 1 };
			};

			// StrikePrice(202): PRICE
			struct StrikePrice
			{
				static constexpr uint16_t tag{ 202 };
			};

			// CoveredOrUncovered(203): INT
			struct CoveredOrUncovered
			{
				static constexpr uint16_t tag{ 203 };
				static constexpr int32_t COVERED{ 0 };
				static constexpr int32_t UNCOVERED{ 1 };
			};

			// CustomerOrFirm(204): INT
			struct CustomerOrFirm
			{
				static constexpr uint16_t tag{ 204 };
				static constexpr int32_t CUSTOMER{ 0 };
				static constexpr int32_t FIRM{ 1 };
			};

			// MaturityDay(205): DAYOFMONTH
			struct MaturityDay
			{
				static constexpr uint16_t tag{ 205 };
			};

			// OptAttribute(206): CHAR
			struct OptAttribute
			{
				static constexpr uint16_t tag{ 206 };
			};

			// SecurityExchange(207): EXCHANGE
			struct SecurityExchange
			{
				static constexpr uint16_t tag{ 207 };
			};

			// NotifyBrokerOfCredit(208): BOOLEAN
			struct NotifyBrokerOfCredit
			{
				static constexpr uint16_t tag{ 208 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// AllocHandlInst(209): INT
			struct AllocHandlInst
			{
				static constexpr uint16_t tag{ 209 };
				static constexpr int32_t MATCH{ 1 };
				static constexpr int32_t FORWARD{ 2 };
				static constexpr int32_t FORWARD_AND_MATCH{ 3 };
			};

			// MaxShow(210): QTY
			struct MaxShow
			{
				static constexpr uint16_t tag{ 210 };
			};

			// PegDifference(211): PRICEOFFSET
			struct PegDifference
			{
				static constexpr uint16_t tag{ 211 };
			};

			// XmlDataLen(212): LENGTH
			struct XmlDataLen
			{
				static constexpr uint16_t tag{ 212 };
			};

			// XmlData(213): DATA
			struct XmlData
			{
				static constexpr uint16_t tag{ 213 };
			};

			// SettlInstRefID(214): STRING
			struct SettlInstRefID
			{
				static constexpr uint16_t tag{ 214 };
			};

			// NoRoutingIDs(215): INT
			struct NoRoutingIDs
			{
				static constexpr uint16_t tag{ 215 };
			};

			// RoutingType(216): INT
			struct RoutingType
			{
				static constexpr uint16_t tag{ 216 };
				static constexpr int32_t TARGET_FIRM{ 1 };
				static constexpr int32_t TARGET_LIST{ 2 };
				static constexpr int32_t BLOCK_FIRM{ 3 };
				static constexpr int32_t BLOCK_LIST{ 4 };
			};

			// RoutingID(217): STRING
			struct RoutingID
			{
				static constexpr uint16_t tag{ 217 };
			};

			// SpreadToBenchmark(218): PRICEOFFSET
			struct SpreadToBenchmark
			{
				static constexpr uint16_t tag{ 218 };
			};

			// Benchmark(219): CHAR
			struct Benchmark
			{
				static constexpr uint16_t tag{ 219 };
				static constexpr char CURVE{ '1' };
				static constexpr char _5_YR{ '2' };
				static constexpr char OLD_5{ '3' };
				static constexpr char _10_YR{ '4' };
				static constexpr char OLD_10{ '5' };
				static constexpr char _30_YR{ '6' };
				static constexpr char OLD_30{ '7' };
				static constexpr char _3_MO_LIBOR{ '8' };
				static constexpr char _6_MO_LIBOR{ '9' };
			};

			// CouponRate(223): FLOAT
			struct CouponRate
			{
				static constexpr uint16_t tag{ 223 };
			};

			// ContractMultiplier(231): FLOAT
			struct ContractMultiplier
			{
				static constexpr uint16_t tag{ 231 };
			};

			// MDReqID(262): STRING
			struct MDReqID
			{
				static constexpr uint16_t tag{ 262 };
			};

			// SubscriptionRequestType(263): CHAR
			struct SubscriptionRequestType
			{
				static constexpr uint16_t tag{ 263 };
				static constexpr char SNAPSHOT{ '0' };
				static constexpr char SNAPSHOT_PLUS_UPDATES{ '1' };
				static constexpr char DISABLE_PREVIOUS_SNAPSHOT_PLUS_UPDATE_REQUEST{ '2' };
			};

			// MarketDepth(264): INT
			struct MarketDepth
			{
				static constexpr uint16_t tag{ 264 };
			};

			// MDUpdateType(265): INT
			struct MDUpdateType
			{
				static constexpr uint16_t tag{ 265 };
				static constexpr int32_t FULL_REFRESH{ 0 };
				static constexpr int32_t INCREMENTAL_REFRESH{ 1 };
			};

			// AggregatedBook(266): BOOLEAN
			struct AggregatedBook
			{
				static constexpr uint16_t tag{ 266 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// NoMDEntryTypes(267): INT
			struct NoMDEntryTypes
			{
				static constexpr uint16_t tag{ 267 };
			};

			// NoMDEntries(268): INT
			struct NoMDEntries
			{
				static constexpr uint16_t tag{ 268 };
			};

			// MDEntryType(269): CHAR
			struct MDEntryType
			{
				static constexpr uint16_t tag{ 269 };
				static constexpr char BID{ '0' };
				static constexpr char OFFER{ '1' };
				static constexpr char TRADE{ '2' };
				static constexpr char INDEX_VALUE{ '3' };
				static constexpr char OPENING_PRICE{ '4' };
				static constexpr char CLOSING_PRICE{ '5' };
				static constexpr char SETTLEMENT_PRICE{ '6' };
				static constexpr char TRADING_SESSION_HIGH_PRICE{ '7' };
				static constexpr char TRADING_SESSION_LOW_PRICE{ '8' };
				static constexpr char TRADING_SESSION_VWAP_PRICE{ '9' };
			};

			// MDEntryPx(270): PRICE
			struct MDEntryPx
			{
				static constexpr uint16_t tag{ 270 };
			};

			// MDEntrySize(271): QTY
			struct MDEntrySize
			{
				static constexpr uint16_t tag{ 271 };
			};

			// MDEntryDate(272): UTCDATE
			struct MDEntryDate
			{
				static constexpr uint16_t tag{ 272 };
			};

			// MDEntryTime(273): UTCTIMEONLY
			struct MDEntryTime
			{
				static constexpr uint16_t tag{ 273 };
			};

			// TickDirection(274): CHAR
			struct TickDirection
			{
				static constexpr uint16_t tag{ 274 };
				static constexpr char PLUS_TICK{ '0' };
				static constexpr char ZERO_PLUS_TICK{ '1' };
				static constexpr char MINUS_TICK{ '2' };
				static constexpr char ZERO_MINUS_TICK{ '3' };
			};

			// MDMkt(275): EXCHANGE
			struct MDMkt
			{
				static constexpr uint16_t tag{ 275 };
			};

			// QuoteCondition(276): MULTIPLEVALUESTRING
			struct QuoteCondition
			{
				static constexpr uint16_t tag{ 276 };
				static inline const std::string OPEN{ "A" };
				static inline const std::string CLOSED{ "B" };
				static inline const std::string EXCHANGE_BEST{ "C" };
				static inline const std::string CONSOLIDATED_BEST{ "D" };
				static inline const std::string LOCKED{ "E" };
				static inline const std::string CROSSED{ "F" };
				static inline const std::string DEPTH{ "G" };
				static inline const std::string FAST_TRADING{ "H" };
				static inline const std::string NON_FIRM{ "I" };
			};

			// TradeCondition(277): MULTIPLEVALUESTRING
			struct TradeCondition
			{
				static constexpr uint16_t tag{ 277 };
				static inline const std::string CASH{ "A" };
				static inline const std::string AVERAGE_PRICE_TRADE{ "B" };
				static inline const std::string CASH_TRADE{ "C" };
				static inline const std::string NEXT_DAY{ "D" };
				static inline const std::string OPENING{ "E" };
				static inline const std::string INTRADAY_TRADE_DETAIL{ "F" };
				static inline const std::string RULE_127_TRADE{ "G" };
				static inline const std::string RULE_155_TRADE{ "H" };
				static inline const std::string SOLD_LAST{ "I" };
				static inline const std::string NEXT_DAY_TRADE{ "J" };
				static inline const std::string OPENED{ "K" };
				static inline const std::string SELLER{ "L" };
				static inline const std::string SOLD{ "M" };
				static inline const std::string STOPPED_STOCK{ "N" };
			};

			// MDEntryID(278): STRING
			struct MDEntryID
			{
				static constexpr uint16_t tag{ 278 };
			};

			// MDUpdateAction(279): CHAR
			struct MDUpdateAction
			{
				static constexpr uint16_t tag{ 279 };
				static constexpr char NEW{ '0' };
				static constexpr char CHANGE{ '1' };
				static constexpr char DELETE{ '2' };
			};

			// MDEntryRefID(280): STRING
			struct MDEntryRefID
			{
				static constexpr uint16_t tag{ 280 };
			};

			// MDReqRejReason(281): CHAR
			struct MDReqRejReason
			{
				static constexpr uint16_t tag{ 281 };
				static constexpr char UNKNOWN_SYMBOL{ '0' };
				static constexpr char DUPLICATE_MDREQID{ '1' };
				static constexpr char INSUFFICIENT_BANDWIDTH{ '2' };
				static constexpr char INSUFFICIENT_PERMISSIONS{ '3' };
				static constexpr char UNSUPPORTED_SUBSCRIPTIONREQUESTTYPE{ '4' };
				static constexpr char UNSUPPORTED_MARKETDEPTH{ '5' };
				static constexpr char UNSUPPORTED_MDUPDATETYPE{ '6' };
				static constexpr char UNSUPPORTED_AGGREGATEDBOOK{ '7' };
				static constexpr char UNSUPPORTED_MDENTRYTYPE{ '8' };
			};

			// MDEntryOriginator(282): STRING
			struct MDEntryOriginator
			{
				static constexpr uint16_t tag{ 282 };
			};

			// LocationID(283): STRING
			struct LocationID
			{
				static constexpr uint16_t tag{ 283 };
			};

			// DeskID(284): STRING
			struct DeskID
			{
				static constexpr uint16_t tag{ 284 };
			};

			// DeleteReason(285): CHAR
			struct DeleteReason
			{
				static constexpr uint16_t tag{ 285 };
				static constexpr char CANCELATION{ '0' };
				static constexpr char ERROR{ '1' };
			};

			// OpenCloseSettleFlag(286): CHAR
			struct OpenCloseSettleFlag
			{
				static constexpr uint16_t tag{ 286 };
				static constexpr char DAILY_OPEN{ '0' };
				static constexpr char SESSION_OPEN{ '1' };
				static constexpr char DELIVERY_SETTLEMENT_PRICE{ '2' };
			};

			// SellerDays(287): INT
			struct SellerDays
			{
				static constexpr uint16_t tag{ 287 };
			};

			// MDEntryBuyer(288): STRING
			struct MDEntryBuyer
			{
				static constexpr uint16_t tag{ 288 };
			};

			// MDEntrySeller(289): STRING
			struct MDEntrySeller
			{
				static constexpr uint16_t tag{ 289 };
			};

			// MDEntryPositionNo(290): INT
			struct MDEntryPositionNo
			{
				static constexpr uint16_t tag{ 290 };
			};

			// FinancialStatus(291): CHAR
			struct FinancialStatus
			{
				static constexpr uint16_t tag{ 291 };
				static constexpr char BANKRUPT{ '1' };
			};

			// CorporateAction(292): CHAR
			struct CorporateAction
			{
				static constexpr uint16_t tag{ 292 };
				static constexpr char EX_DIVIDEND{ 'A' };
				static constexpr char EX_DISTRIBUTION{ 'B' };
				static constexpr char EX_RIGHTS{ 'C' };
				static constexpr char NEW{ 'D' };
				static constexpr char EX_INTEREST{ 'E' };
			};

			// DefBidSize(293): QTY
			struct DefBidSize
			{
				static constexpr uint16_t tag{ 293 };
			};

			// DefOfferSize(294): QTY
			struct DefOfferSize
			{
				static constexpr uint16_t tag{ 294 };
			};

			// NoQuoteEntries(295): INT
			struct NoQuoteEntries
			{
				static constexpr uint16_t tag{ 295 };
			};

			// NoQuoteSets(296): INT
			struct NoQuoteSets
			{
				static constexpr uint16_t tag{ 296 };
			};

			// QuoteAckStatus(297): INT
			struct QuoteAckStatus
			{
				static constexpr uint16_t tag{ 297 };
				static constexpr int32_t ACCEPTED{ 0 };
				static constexpr int32_t CANCELED_FOR_SYMBOL{ 1 };
				static constexpr int32_t CANCELED_FOR_SECURITY_TYPE{ 2 };
				static constexpr int32_t CANCELED_FOR_UNDERLYING{ 3 };
				static constexpr int32_t CANCELED_ALL{ 4 };
				static constexpr int32_t REJECTED{ 5 };
			};

			// QuoteCancelType(298): INT
			struct QuoteCancelType
			{
				static constexpr uint16_t tag{ 298 };
				static constexpr int32_t CANCEL_FOR_SYMBOL{ 1 };
				static constexpr int32_t CANCEL_FOR_SECURITY_TYPE{ 2 };
				static constexpr int32_t CANCEL_FOR_UNDERLYING_SYMBOL{ 3 };
				static constexpr int32_t CANCEL_FOR_ALL_QUOTES{ 4 };
			};

			// QuoteEntryID(299): STRING
			struct QuoteEntryID
			{
				static constexpr uint16_t tag{ 299 };
			};

			// QuoteRejectReason(300): INT
			struct QuoteRejectReason
			{
				static constexpr uint16_t tag{ 300 };
				static constexpr int32_t UNKNOWN_SYMBOL{ 1 };
				static constexpr int32_t EXCHANGE{ 2 };
				static constexpr int32_t QUOTE_REQUEST_EXCEEDS_LIMIT{ 3 };
				static constexpr int32_t TOO_LATE_TO_ENTER{ 4 };
				static constexpr int32_t UNKNOWN_QUOTE{ 5 };
				static constexpr int32_t DUPLICATE_QUOTE{ 6 };
				static constexpr int32_t INVALID_BID_ASK_SPREAD{ 7 };
				static constexpr int32_t INVALID_PRICE{ 8 };
				static constexpr int32_t NOT_AUTHORIZED_TO_QUOTE_SECURITY{ 9 };
			};

			// QuoteResponseLevel(301): INT
			struct QuoteResponseLevel
			{
				static constexpr uint16_t tag{ 301 };
				static constexpr int32_t NO_ACKNOWLEDGEMENT{ 0 };
				static constexpr int32_t ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES{ 1 };
				static constexpr int32_t ACKNOWLEDGE_EACH_QUOTE_MESSAGES{ 2 };
			};

			// QuoteSetID(302): STRING
			struct QuoteSetID
			{
				static constexpr uint16_t tag{ 302 };
			};

			// QuoteRequestType(303): INT
			struct QuoteRequestType
			{
				static constexpr uint16_t tag{ 303 };
				static constexpr int32_t MANUAL{ 1 };
				static constexpr int32_t AUTOMATIC{ 2 };
			};

			// TotQuoteEntries(304): INT
			struct TotQuoteEntries
			{
				static constexpr uint16_t tag{ 304 };
			};

			// UnderlyingIDSource(305): STRING
			struct UnderlyingIDSource
			{
				static constexpr uint16_t tag{ 305 };
			};

			// UnderlyingIssuer(306): STRING
			struct UnderlyingIssuer
			{
				static constexpr uint16_t tag{ 306 };
			};

			// UnderlyingSecurityDesc(307): STRING
			struct UnderlyingSecurityDesc
			{
				static constexpr uint16_t tag{ 307 };
			};

			// UnderlyingSecurityExchange(308): EXCHANGE
			struct UnderlyingSecurityExchange
			{
				static constexpr uint16_t tag{ 308 };
			};

			// UnderlyingSecurityID(309): STRING
			struct UnderlyingSecurityID
			{
				static constexpr uint16_t tag{ 309 };
			};

			// UnderlyingSecurityType(310): STRING
			struct UnderlyingSecurityType
			{
				static constexpr uint16_t tag{ 310 };
			};

			// UnderlyingSymbol(311): STRING
			struct UnderlyingSymbol
			{
				static constexpr uint16_t tag{ 311 };
			};

			// UnderlyingSymbolSfx(312): STRING
			struct UnderlyingSymbolSfx
			{
				static constexpr uint16_t tag{ 312 };
			};

			// UnderlyingMaturityMonthYear(313): MONTHYEAR
			struct UnderlyingMaturityMonthYear
			{
				static constexpr uint16_t tag{ 313 };
			};

			// UnderlyingMaturityDay(314): DAYOFMONTH
			struct UnderlyingMaturityDay
			{
				static constexpr uint16_t tag{ 314 };
			};

			// UnderlyingPutOrCall(315): INT
			struct UnderlyingPutOrCall
			{
				static constexpr uint16_t tag{ 315 };
			};

			// UnderlyingStrikePrice(316): PRICE
			struct UnderlyingStrikePrice
			{
				static constexpr uint16_t tag{ 316 };
			};

			// UnderlyingOptAttribute(317): CHAR
			struct UnderlyingOptAttribute
			{
				static constexpr uint16_t tag{ 317 };
			};

			// UnderlyingCurrency(318): CURRENCY
			struct UnderlyingCurrency
			{
				static constexpr uint16_t tag{ 318 };
			};

			// RatioQty(319): QUANTITY
			struct RatioQty
			{
				static constexpr uint16_t tag{ 319 };
			};

			// SecurityReqID(320): STRING
			struct SecurityReqID
			{
				static constexpr uint16_t tag{ 320 };
			};

			// SecurityRequestType(321): INT
			struct SecurityRequestType
			{
				static constexpr uint16_t tag{ 321 };
				static constexpr int32_t REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONS{ 0 };
				static constexpr int32_t REQUEST_SECURITY_IDENTITY_FOR_THE_SPECIFICATIONS_PROVIDED{ 1 };
				static constexpr int32_t REQUEST_LIST_SECURITY_TYPES{ 2 };
				static constexpr int32_t REQUEST_LIST_SECURITIES{ 3 };
			};

			// SecurityResponseID(322): STRING
			struct SecurityResponseID
			{
				static constexpr uint16_t tag{ 322 };
			};

			// SecurityResponseType(323): INT
			struct SecurityResponseType
			{
				static constexpr uint16_t tag{ 323 };
				static constexpr int32_t ACCEPT_SECURITY_PROPOSAL_AS_IS{ 1 };
				static constexpr int32_t ACCEPT_SECURITY_PROPOSAL_WITH_REVISIONS_AS_INDICATED_IN_THE_MESSAGE{ 2 };
				static constexpr int32_t LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUEST{ 3 };
				static constexpr int32_t LIST_OF_SECURITIES_RETURNED_PER_REQUEST{ 4 };
				static constexpr int32_t REJECT_SECURITY_PROPOSAL{ 5 };
				static constexpr int32_t CAN_NOT_MATCH_SELECTION_CRITERIA{ 6 };
			};

			// SecurityStatusReqID(324): STRING
			struct SecurityStatusReqID
			{
				static constexpr uint16_t tag{ 324 };
			};

			// UnsolicitedIndicator(325): BOOLEAN
			struct UnsolicitedIndicator
			{
				static constexpr uint16_t tag{ 325 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// SecurityTradingStatus(326): INT
			struct SecurityTradingStatus
			{
				static constexpr uint16_t tag{ 326 };
				static constexpr int32_t OPENING_DELAY{ 1 };
				static constexpr int32_t MARKET_ON_CLOSE_IMBALANCE_SELL{ 10 };
				static constexpr int32_t _11{ 11 };
				static constexpr int32_t NO_MARKET_IMBALANCE{ 12 };
				static constexpr int32_t NO_MARKET_ON_CLOSE_IMBALANCE{ 13 };
				static constexpr int32_t ITS_PRE_OPENING{ 14 };
				static constexpr int32_t NEW_PRICE_INDICATION{ 15 };
				static constexpr int32_t TRADE_DISSEMINATION_TIME{ 16 };
				static constexpr int32_t READY_TO_TRADE{ 17 };
				static constexpr int32_t NOT_AVAILABLE_FOR_TRADING{ 18 };
				static constexpr int32_t NOT_TRADED_ON_THIS_MARKET{ 19 };
				static constexpr int32_t TRADING_HALT{ 2 };
				static constexpr int32_t UNKNOWN_OR_INVALID{ 20 };
				static constexpr int32_t RESUME{ 3 };
				static constexpr int32_t NO_OPEN_NO_RESUME{ 4 };
				static constexpr int32_t PRICE_INDICATION{ 5 };
				static constexpr int32_t TRADING_RANGE_INDICATION{ 6 };
				static constexpr int32_t MARKET_IMBALANCE_BUY{ 7 };
				static constexpr int32_t MARKET_IMBALANCE_SELL{ 8 };
				static constexpr int32_t MARKET_ON_CLOSE_IMBALANCE_BUY{ 9 };
			};

			// HaltReasonChar(327): CHAR
			struct HaltReasonChar
			{
				static constexpr uint16_t tag{ 327 };
				static constexpr char NEWS_DISSEMINATION{ 'D' };
				static constexpr char ORDER_INFLUX{ 'E' };
				static constexpr char ORDER_IMBALANCE{ 'I' };
				static constexpr char ADDITIONAL_INFORMATION{ 'M' };
				static constexpr char NEWS_PENDING{ 'P' };
				static constexpr char EQUIPMENT_CHANGEOVER{ 'X' };
			};

			// InViewOfCommon(328): BOOLEAN
			struct InViewOfCommon
			{
				static constexpr uint16_t tag{ 328 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// DueToRelated(329): BOOLEAN
			struct DueToRelated
			{
				static constexpr uint16_t tag{ 329 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// BuyVolume(330): QTY
			struct BuyVolume
			{
				static constexpr uint16_t tag{ 330 };
			};

			// SellVolume(331): QTY
			struct SellVolume
			{
				static constexpr uint16_t tag{ 331 };
			};

			// HighPx(332): PRICE
			struct HighPx
			{
				static constexpr uint16_t tag{ 332 };
			};

			// LowPx(333): PRICE
			struct LowPx
			{
				static constexpr uint16_t tag{ 333 };
			};

			// Adjustment(334): INT
			struct Adjustment
			{
				static constexpr uint16_t tag{ 334 };
				static constexpr int32_t CANCEL{ 1 };
				static constexpr int32_t ERROR{ 2 };
				static constexpr int32_t CORRECTION{ 3 };
			};

			// TradSesReqID(335): STRING
			struct TradSesReqID
			{
				static constexpr uint16_t tag{ 335 };
			};

			// TradingSessionID(336): STRING
			struct TradingSessionID
			{
				static constexpr uint16_t tag{ 336 };
			};

			// ContraTrader(337): STRING
			struct ContraTrader
			{
				static constexpr uint16_t tag{ 337 };
			};

			// TradSesMethod(338): INT
			struct TradSesMethod
			{
				static constexpr uint16_t tag{ 338 };
				static constexpr int32_t ELECTRONIC{ 1 };
				static constexpr int32_t OPEN_OUTCRY{ 2 };
				static constexpr int32_t TWO_PARTY{ 3 };
			};

			// TradSesMode(339): INT
			struct TradSesMode
			{
				static constexpr uint16_t tag{ 339 };
				static constexpr int32_t TESTING{ 1 };
				static constexpr int32_t SIMULATED{ 2 };
				static constexpr int32_t PRODUCTION{ 3 };
			};

			// TradSesStatus(340): INT
			struct TradSesStatus
			{
				static constexpr uint16_t tag{ 340 };
				static constexpr int32_t HALTED{ 1 };
				static constexpr int32_t OPEN{ 2 };
				static constexpr int32_t CLOSED{ 3 };
				static constexpr int32_t PRE_OPEN{ 4 };
				static constexpr int32_t PRE_CLOSE{ 5 };
			};

			// TradSesStartTime(341): UTCTIMESTAMP
			struct TradSesStartTime
			{
				static constexpr uint16_t tag{ 341 };
			};

			// TradSesOpenTime(342): UTCTIMESTAMP
			struct TradSesOpenTime
			{
				static constexpr uint16_t tag{ 342 };
			};

			// TradSesPreCloseTime(343): UTCTIMESTAMP
			struct TradSesPreCloseTime
			{
				static constexpr uint16_t tag{ 343 };
			};

			// TradSesCloseTime(344): UTCTIMESTAMP
			struct TradSesCloseTime
			{
				static constexpr uint16_t tag{ 344 };
			};

			// TradSesEndTime(345): UTCTIMESTAMP
			struct TradSesEndTime
			{
				static constexpr uint16_t tag{ 345 };
			};

			// NumberOfOrders(346): INT
			struct NumberOfOrders
			{
				static constexpr uint16_t tag{ 346 };
			};

			// MessageEncoding(347): STRING
			struct MessageEncoding
			{
				static constexpr uint16_t tag{ 347 };
				static inline const std::string EUC_JP{ "EUC-JP" };
				static inline const std::string ISO_2022_JP{ "ISO-2022-JP" };
				static inline const std::string SHIFT_JIS{ "SHIFT_JIS" };
				static inline const std::string UTF_8{ "UTF-8" };
			};

			// EncodedIssuerLen(348): LENGTH
			struct EncodedIssuerLen
			{
				static constexpr uint16_t tag{ 348 };
			};

			// EncodedIssuer(349): DATA
			struct EncodedIssuer
			{
				static constexpr uint16_t tag{ 349 };
			};

			// EncodedSecurityDescLen(350): LENGTH
			struct EncodedSecurityDescLen
			{
				static constexpr uint16_t tag{ 350 };
			};

			// EncodedSecurityDesc(351): DATA
			struct EncodedSecurityDesc
			{
				static constexpr uint16_t tag{ 351 };
			};

			// EncodedListExecInstLen(352): LENGTH
			struct EncodedListExecInstLen
			{
				static constexpr uint16_t tag{ 352 };
			};

			// EncodedListExecInst(353): DATA
			struct EncodedListExecInst
			{
				static constexpr uint16_t tag{ 353 };
			};

			// EncodedTextLen(354): LENGTH
			struct EncodedTextLen
			{
				static constexpr uint16_t tag{ 354 };
			};

			// EncodedText(355): DATA
			struct EncodedText
			{
				static constexpr uint16_t tag{ 355 };
			};

			// EncodedSubjectLen(356): LENGTH
			struct EncodedSubjectLen
			{
				static constexpr uint16_t tag{ 356 };
			};

			// EncodedSubject(357): DATA
			struct EncodedSubject
			{
				static constexpr uint16_t tag{ 357 };
			};

			// EncodedHeadlineLen(358): LENGTH
			struct EncodedHeadlineLen
			{
				static constexpr uint16_t tag{ 358 };
			};

			// EncodedHeadline(359): DATA
			struct EncodedHeadline
			{
				static constexpr uint16_t tag{ 359 };
			};

			// EncodedAllocTextLen(360): LENGTH
			struct EncodedAllocTextLen
			{
				static constexpr uint16_t tag{ 360 };
			};

			// EncodedAllocText(361): DATA
			struct EncodedAllocText
			{
				static constexpr uint16_t tag{ 361 };
			};

			// EncodedUnderlyingIssuerLen(362): LENGTH
			struct EncodedUnderlyingIssuerLen
			{
				static constexpr uint16_t tag{ 362 };
			};

			// EncodedUnderlyingIssuer(363): DATA
			struct EncodedUnderlyingIssuer
			{
				static constexpr uint16_t tag{ 363 };
			};

			// EncodedUnderlyingSecurityDescLen(364): LENGTH
			struct EncodedUnderlyingSecurityDescLen
			{
				static constexpr uint16_t tag{ 364 };
			};

			// EncodedUnderlyingSecurityDesc(365): DATA
			struct EncodedUnderlyingSecurityDesc
			{
				static constexpr uint16_t tag{ 365 };
			};

			// AllocPrice(366): PRICE
			struct AllocPrice
			{
				static constexpr uint16_t tag{ 366 };
			};

			// QuoteSetValidUntilTime(367): UTCTIMESTAMP
			struct QuoteSetValidUntilTime
			{
				static constexpr uint16_t tag{ 367 };
			};

			// QuoteEntryRejectReason(368): INT
			struct QuoteEntryRejectReason
			{
				static constexpr uint16_t tag{ 368 };
				static constexpr int32_t UNKNOWN_SYMBOL{ 1 };
				static constexpr int32_t EXCHANGE{ 2 };
				static constexpr int32_t QUOTE_EXCEEDS_LIMIT{ 3 };
				static constexpr int32_t TOO_LATE_TO_ENTER{ 4 };
				static constexpr int32_t UNKNOWN_QUOTE{ 5 };
				static constexpr int32_t DUPLICATE_QUOTE{ 6 };
				static constexpr int32_t INVALID_BID_ASK_SPREAD{ 7 };
				static constexpr int32_t INVALID_PRICE{ 8 };
				static constexpr int32_t NOT_AUTHORIZED_TO_QUOTE_SECURITY{ 9 };
			};

			// LastMsgSeqNumProcessed(369): INT
			struct LastMsgSeqNumProcessed
			{
				static constexpr uint16_t tag{ 369 };
			};

			// OnBehalfOfSendingTime(370): UTCTIMESTAMP
			struct OnBehalfOfSendingTime
			{
				static constexpr uint16_t tag{ 370 };
			};

			// RefTagID(371): INT
			struct RefTagID
			{
				static constexpr uint16_t tag{ 371 };
			};

			// RefMsgType(372): STRING
			struct RefMsgType
			{
				static constexpr uint16_t tag{ 372 };
			};

			// SessionRejectReason(373): INT
			struct SessionRejectReason
			{
				static constexpr uint16_t tag{ 373 };
				static constexpr int32_t INVALID_TAG_NUMBER{ 0 };
				static constexpr int32_t REQUIRED_TAG_MISSING{ 1 };
				static constexpr int32_t SENDINGTIME_ACCURACY_PROBLEM{ 10 };
				static constexpr int32_t INVALID_MSGTYPE{ 11 };
				static constexpr int32_t TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE{ 2 };
				static constexpr int32_t UNDEFINED_TAG{ 3 };
				static constexpr int32_t TAG_SPECIFIED_WITHOUT_A_VALUE{ 4 };
				static constexpr int32_t VALUE_IS_INCORRECT{ 5 };
				static constexpr int32_t INCORRECT_DATA_FORMAT_FOR_VALUE{ 6 };
				static constexpr int32_t DECRYPTION_PROBLEM{ 7 };
				static constexpr int32_t SIGNATURE_PROBLEM{ 8 };
				static constexpr int32_t COMPID_PROBLEM{ 9 };
			};

			// BidRequestTransType(374): CHAR
			struct BidRequestTransType
			{
				static constexpr uint16_t tag{ 374 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NO{ 'N' };
			};

			// ContraBroker(375): STRING
			struct ContraBroker
			{
				static constexpr uint16_t tag{ 375 };
			};

			// ComplianceID(376): STRING
			struct ComplianceID
			{
				static constexpr uint16_t tag{ 376 };
			};

			// SolicitedFlag(377): BOOLEAN
			struct SolicitedFlag
			{
				static constexpr uint16_t tag{ 377 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// ExecRestatementReason(378): INT
			struct ExecRestatementReason
			{
				static constexpr uint16_t tag{ 378 };
				static constexpr int32_t GT_CORPORATE_ACTION{ 0 };
				static constexpr int32_t GT_RENEWAL{ 1 };
				static constexpr int32_t VERBAL_CHANGE{ 2 };
				static constexpr int32_t REPRICING_OF_ORDER{ 3 };
				static constexpr int32_t BROKER_OPTION{ 4 };
				static constexpr int32_t PARTIAL_DECLINE_OF_ORDERQTY{ 5 };
			};

			// BusinessRejectRefID(379): STRING
			struct BusinessRejectRefID
			{
				static constexpr uint16_t tag{ 379 };
			};

			// BusinessRejectReason(380): INT
			struct BusinessRejectReason
			{
				static constexpr uint16_t tag{ 380 };
				static constexpr int32_t OTHER{ 0 };
				static constexpr int32_t UNKOWN_ID{ 1 };
				static constexpr int32_t UNKNOWN_SECURITY{ 2 };
				static constexpr int32_t UNSUPPORTED_MESSAGE_TYPE{ 3 };
				static constexpr int32_t APPLICATION_NOT_AVAILABLE{ 4 };
				static constexpr int32_t CONDITIONALLY_REQUIRED_FIELD_MISSING{ 5 };
			};

			// GrossTradeAmt(381): AMT
			struct GrossTradeAmt
			{
				static constexpr uint16_t tag{ 381 };
			};

			// NoContraBrokers(382): INT
			struct NoContraBrokers
			{
				static constexpr uint16_t tag{ 382 };
			};

			// MaxMessageSize(383): INT
			struct MaxMessageSize
			{
				static constexpr uint16_t tag{ 383 };
			};

			// NoMsgTypes(384): INT
			struct NoMsgTypes
			{
				static constexpr uint16_t tag{ 384 };
			};

			// MsgDirection(385): CHAR
			struct MsgDirection
			{
				static constexpr uint16_t tag{ 385 };
				static constexpr char RECEIVE{ 'R' };
				static constexpr char SEND{ 'S' };
			};

			// NoTradingSessions(386): INT
			struct NoTradingSessions
			{
				static constexpr uint16_t tag{ 386 };
			};

			// TotalVolumeTraded(387): QTY
			struct TotalVolumeTraded
			{
				static constexpr uint16_t tag{ 387 };
			};

			// DiscretionInst(388): CHAR
			struct DiscretionInst
			{
				static constexpr uint16_t tag{ 388 };
				static constexpr char RELATED_TO_DISPLAYED_PRICE{ '0' };
				static constexpr char RELATED_TO_MARKET_PRICE{ '1' };
				static constexpr char RELATED_TO_PRIMARY_PRICE{ '2' };
				static constexpr char RELATED_TO_LOCAL_PRIMARY_PRICE{ '3' };
				static constexpr char RELATED_TO_MIDPOINT_PRICE{ '4' };
				static constexpr char RELATED_TO_LAST_TRADE_PRICE{ '5' };
			};

			// DiscretionOffset(389): PRICEOFFSET
			struct DiscretionOffset
			{
				static constexpr uint16_t tag{ 389 };
			};

			// BidID(390): STRING
			struct BidID
			{
				static constexpr uint16_t tag{ 390 };
			};

			// ClientBidID(391): STRING
			struct ClientBidID
			{
				static constexpr uint16_t tag{ 391 };
			};

			// ListName(392): STRING
			struct ListName
			{
				static constexpr uint16_t tag{ 392 };
			};

			// TotalNumSecurities(393): INT
			struct TotalNumSecurities
			{
				static constexpr uint16_t tag{ 393 };
			};

			// BidType(394): INT
			struct BidType
			{
				static constexpr uint16_t tag{ 394 };
			};

			// NumTickets(395): INT
			struct NumTickets
			{
				static constexpr uint16_t tag{ 395 };
			};

			// SideValue1(396): AMT
			struct SideValue1
			{
				static constexpr uint16_t tag{ 396 };
			};

			// SideValue2(397): AMT
			struct SideValue2
			{
				static constexpr uint16_t tag{ 397 };
			};

			// NoBidDescriptors(398): INT
			struct NoBidDescriptors
			{
				static constexpr uint16_t tag{ 398 };
			};

			// BidDescriptorType(399): INT
			struct BidDescriptorType
			{
				static constexpr uint16_t tag{ 399 };
			};

			// BidDescriptor(400): STRING
			struct BidDescriptor
			{
				static constexpr uint16_t tag{ 400 };
			};

			// SideValueInd(401): INT
			struct SideValueInd
			{
				static constexpr uint16_t tag{ 401 };
			};

			// LiquidityPctLow(402): FLOAT
			struct LiquidityPctLow
			{
				static constexpr uint16_t tag{ 402 };
			};

			// LiquidityPctHigh(403): FLOAT
			struct LiquidityPctHigh
			{
				static constexpr uint16_t tag{ 403 };
			};

			// LiquidityValue(404): AMT
			struct LiquidityValue
			{
				static constexpr uint16_t tag{ 404 };
			};

			// EFPTrackingError(405): FLOAT
			struct EFPTrackingError
			{
				static constexpr uint16_t tag{ 405 };
			};

			// FairValue(406): AMT
			struct FairValue
			{
				static constexpr uint16_t tag{ 406 };
			};

			// OutsideIndexPct(407): FLOAT
			struct OutsideIndexPct
			{
				static constexpr uint16_t tag{ 407 };
			};

			// ValueOfFutures(408): AMT
			struct ValueOfFutures
			{
				static constexpr uint16_t tag{ 408 };
			};

			// LiquidityIndType(409): INT
			struct LiquidityIndType
			{
				static constexpr uint16_t tag{ 409 };
				static constexpr int32_t _5_DAY_MOVING_AVERAGE{ 1 };
				static constexpr int32_t _20_DAY_MOVING_AVERAGE{ 2 };
				static constexpr int32_t NORMAL_MARKET_SIZE{ 3 };
				static constexpr int32_t OTHER{ 4 };
			};

			// WtAverageLiquidity(410): FLOAT
			struct WtAverageLiquidity
			{
				static constexpr uint16_t tag{ 410 };
			};

			// ExchangeForPhysical(411): BOOLEAN
			struct ExchangeForPhysical
			{
				static constexpr uint16_t tag{ 411 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// OutMainCntryUIndex(412): AMT
			struct OutMainCntryUIndex
			{
				static constexpr uint16_t tag{ 412 };
			};

			// CrossPercent(413): FLOAT
			struct CrossPercent
			{
				static constexpr uint16_t tag{ 413 };
			};

			// ProgRptReqs(414): INT
			struct ProgRptReqs
			{
				static constexpr uint16_t tag{ 414 };
				static constexpr int32_t BUYSIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUSREQUEST{ 1 };
				static constexpr int32_t SELLSIDE_PERIODICALLY_SENDS_STATUS_USING_LISTSTATUS_PERIOD_OPTIONALLY_SPECIFIED_IN_PROGRESSPERIOD{ 2 };
				static constexpr int32_t REAL_TIME_EXECUTION_REPORTS{ 3 };
			};

			// ProgPeriodInterval(415): INT
			struct ProgPeriodInterval
			{
				static constexpr uint16_t tag{ 415 };
			};

			// IncTaxInd(416): INT
			struct IncTaxInd
			{
				static constexpr uint16_t tag{ 416 };
				static constexpr int32_t NET{ 1 };
				static constexpr int32_t GROSS{ 2 };
			};

			// NumBidders(417): INT
			struct NumBidders
			{
				static constexpr uint16_t tag{ 417 };
			};

			// TradeType(418): CHAR
			struct TradeType
			{
				static constexpr uint16_t tag{ 418 };
				static constexpr char AGENCY{ 'A' };
				static constexpr char VWAP_GUARANTEE{ 'G' };
				static constexpr char GUARANTEED_CLOSE{ 'J' };
				static constexpr char RISK_TRADE{ 'R' };
			};

			// BasisPxType(419): CHAR
			struct BasisPxType
			{
				static constexpr uint16_t tag{ 419 };
				static constexpr char CLOSING_PRICE_AT_MORNING_SESSION{ '2' };
				static constexpr char CLOSING_PRICE{ '3' };
				static constexpr char CURRENT_PRICE{ '4' };
				static constexpr char SQ{ '5' };
				static constexpr char VWAP_THROUGH_A_DAY{ '6' };
				static constexpr char VWAP_THROUGH_A_MORNING_SESSION{ '7' };
				static constexpr char VWAP_THROUGH_AN_AFTERNOON_SESSION{ '8' };
				static constexpr char VWAP_THROUGH_A_DAY_EXCEPT_YORI{ '9' };
				static constexpr char VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORI{ 'A' };
				static constexpr char VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORI{ 'B' };
				static constexpr char STRIKE{ 'C' };
				static constexpr char OPEN{ 'D' };
				static constexpr char OTHERS{ 'Z' };
			};

			// NoBidComponents(420): INT
			struct NoBidComponents
			{
				static constexpr uint16_t tag{ 420 };
			};

			// Country(421): STRING
			struct Country
			{
				static constexpr uint16_t tag{ 421 };
			};

			// TotNoStrikes(422): INT
			struct TotNoStrikes
			{
				static constexpr uint16_t tag{ 422 };
			};

			// PriceType(423): INT
			struct PriceType
			{
				static constexpr uint16_t tag{ 423 };
				static constexpr int32_t PERCENTAGE{ 1 };
				static constexpr int32_t PER_SHARE{ 2 };
				static constexpr int32_t FIXED_AMOUNT{ 3 };
			};

			// DayOrderQty(424): QTY
			struct DayOrderQty
			{
				static constexpr uint16_t tag{ 424 };
			};

			// DayCumQty(425): QTY
			struct DayCumQty
			{
				static constexpr uint16_t tag{ 425 };
			};

			// DayAvgPx(426): PRICE
			struct DayAvgPx
			{
				static constexpr uint16_t tag{ 426 };
			};

			// GTBookingInst(427): INT
			struct GTBookingInst
			{
				static constexpr uint16_t tag{ 427 };
				static constexpr int32_t BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION{ 0 };
				static constexpr int32_t ACCUMULATE_EXECUTIONS_UNTIL_ORDER_IS_FILLED_OR_EXPIRES{ 1 };
				static constexpr int32_t ACCUMULATE_UNTIL_VERBALLY_NOTIFIED_OTHERWISE{ 2 };
			};

			// NoStrikes(428): INT
			struct NoStrikes
			{
				static constexpr uint16_t tag{ 428 };
			};

			// ListStatusType(429): INT
			struct ListStatusType
			{
				static constexpr uint16_t tag{ 429 };
			};

			// NetGrossInd(430): INT
			struct NetGrossInd
			{
				static constexpr uint16_t tag{ 430 };
				static constexpr int32_t NET{ 1 };
				static constexpr int32_t GROSS{ 2 };
			};

			// ListOrderStatus(431): INT
			struct ListOrderStatus
			{
				static constexpr uint16_t tag{ 431 };
			};

			// ExpireDate(432): LOCALMKTDATE
			struct ExpireDate
			{
				static constexpr uint16_t tag{ 432 };
			};

			// ListExecInstType(433): CHAR
			struct ListExecInstType
			{
				static constexpr uint16_t tag{ 433 };
				static constexpr char IMMEDIATE{ '1' };
				static constexpr char WAIT_FOR_EXECUTE_INSTRUCTION{ '2' };
			};

			// CxlRejResponseTo(434): CHAR
			struct CxlRejResponseTo
			{
				static constexpr uint16_t tag{ 434 };
				static constexpr char ORDER_CANCEL_REQUEST{ '1' };
				static constexpr char ORDER_CANCEL_REPLACE_REQUEST{ '2' };
			};

			// UnderlyingCouponRate(435): FLOAT
			struct UnderlyingCouponRate
			{
				static constexpr uint16_t tag{ 435 };
			};

			// UnderlyingContractMultiplier(436): FLOAT
			struct UnderlyingContractMultiplier
			{
				static constexpr uint16_t tag{ 436 };
			};

			// ContraTradeQty(437): QTY
			struct ContraTradeQty
			{
				static constexpr uint16_t tag{ 437 };
			};

			// ContraTradeTime(438): UTCTIMESTAMP
			struct ContraTradeTime
			{
				static constexpr uint16_t tag{ 438 };
			};

			// ClearingFirm(439): STRING
			struct ClearingFirm
			{
				static constexpr uint16_t tag{ 439 };
			};

			// ClearingAccount(440): STRING
			struct ClearingAccount
			{
				static constexpr uint16_t tag{ 440 };
			};

			// LiquidityNumSecurities(441): INT
			struct LiquidityNumSecurities
			{
				static constexpr uint16_t tag{ 441 };
			};

			// MultiLegReportingType(442): CHAR
			struct MultiLegReportingType
			{
				static constexpr uint16_t tag{ 442 };
				static constexpr char SINGLE_SECURITY{ '1' };
				static constexpr char INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITY{ '2' };
				static constexpr char MULTI_LEG_SECURITY{ '3' };
			};

			// StrikeTime(443): UTCTIMESTAMP
			struct StrikeTime
			{
				static constexpr uint16_t tag{ 443 };
			};

			// ListStatusText(444): STRING
			struct ListStatusText
			{
				static constexpr uint16_t tag{ 444 };
			};

			// EncodedListStatusTextLen(445): LENGTH
			struct EncodedListStatusTextLen
			{
				static constexpr uint16_t tag{ 445 };
			};

			// EncodedListStatusText(446): DATA
			struct EncodedListStatusText
			{
				static constexpr uint16_t tag{ 446 };
			};
		}
	}
}

#endif // UFECPP_CONSTS_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_