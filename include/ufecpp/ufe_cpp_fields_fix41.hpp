/*
    ____                      __      ____
   /\  _`\   __             /'_ `\   /\  _`\
   \ \ \L\_\/\_\    __  _  /\ \L\ \  \ \ \L\ \ _ __    ___
    \ \  _\/\/\ \  /\ \/'\ \/_> _ <_  \ \ ,__//\`'__\ / __`\
     \ \ \/  \ \ \ \/>  </   /\ \L\ \  \ \ \/ \ \ \/ /\ \L\ \
      \ \_\   \ \_\ /\_/\_\  \ \____/   \ \_\  \ \_\ \ \____/
       \/_/    \/_/ \//\/_/   \/___/     \/_/   \/_/  \/___/

               Fix8Pro FIX Engine and Framework

Copyright (C) 2010-19 Fix8 Market Technologies Pty Ltd (ABN 29 167 027 198)
All Rights Reserved. [http://www.fix8mt.com] <heretohelp@fix8mt.com>

THIS FILE IS PROPRIETARY AND  CONFIDENTIAL. NO PART OF THIS FILE MAY BE REPRODUCED,  STORED
IN A RETRIEVAL SYSTEM,  OR TRANSMITTED, IN ANY FORM OR ANY MEANS,  ELECTRONIC, PHOTOSTATIC,
RECORDED OR OTHERWISE, WITHOUT THE PRIOR AND  EXPRESS WRITTEN  PERMISSION  OF  FIX8  MARKET
TECHNOLOGIES PTY LTD.
*/

// Autogenerated on 2019-09-03 07:52:51.739607
// /home/sergey/src/f8/fix8pro/compiler/py/f8c/f8c.py --template ufe_java_fields ufe_cpp_fields ufe_cs_fields ufe_py_fields ufe_cpp_messages --output-dir ./generated --schema-dir /home/sergey/src/f8/fix8pro/schema/xml FIX50SP2 FIX42 FIX44 FIX40 FIX41 FIX43 FIX50 FIX50SP1
// DO NOT EDIT!

#ifndef UFECPP_FIELDS_FIX41_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_
#define UFECPP_FIELDS_FIX41_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_

#include <string>
#include <ufecpp/ufecppversion.h>

namespace UFECPP
{
	namespace FIX41
	{
		namespace Field
		{

			// Account(1): CHAR
			struct Account
			{
				static constexpr uint16_t tag{ 1 };
			};

			// AdvId(2): CHAR
			struct AdvId
			{
				static constexpr uint16_t tag{ 2 };
			};

			// AdvRefID(3): CHAR
			struct AdvRefID
			{
				static constexpr uint16_t tag{ 3 };
			};

			// AdvSide(4): CHAR
			struct AdvSide
			{
				static constexpr uint16_t tag{ 4 };
				static constexpr char BUY{ 'B' };
				static constexpr char SELL{ 'S' };
				static constexpr char TRADE{ 'T' };
				static constexpr char CROSS{ 'X' };
			};

			// AdvTransType(5): CHAR
			struct AdvTransType
			{
				static constexpr uint16_t tag{ 5 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NEW{ 'N' };
				static constexpr char REPLACE{ 'R' };
			};

			// AvgPx(6): FLOAT
			struct AvgPx
			{
				static constexpr uint16_t tag{ 6 };
			};

			// BeginSeqNo(7): INT
			struct BeginSeqNo
			{
				static constexpr uint16_t tag{ 7 };
			};

			// BeginString(8): CHAR
			struct BeginString
			{
				static constexpr uint16_t tag{ 8 };
			};

			// BodyLength(9): INT
			struct BodyLength
			{
				static constexpr uint16_t tag{ 9 };
			};

			// CheckSum(10): CHAR
			struct CheckSum
			{
				static constexpr uint16_t tag{ 10 };
			};

			// ClOrdID(11): CHAR
			struct ClOrdID
			{
				static constexpr uint16_t tag{ 11 };
			};

			// Commission(12): FLOAT
			struct Commission
			{
				static constexpr uint16_t tag{ 12 };
			};

			// CommType(13): CHAR
			struct CommType
			{
				static constexpr uint16_t tag{ 13 };
				static constexpr char PER_SHARE{ '1' };
				static constexpr char PERCENTAGE{ '2' };
				static constexpr char ABSOLUTE{ '3' };
			};

			// CumQty(14): INT
			struct CumQty
			{
				static constexpr uint16_t tag{ 14 };
			};

			// Currency(15): CHAR
			struct Currency
			{
				static constexpr uint16_t tag{ 15 };
			};

			// EndSeqNo(16): INT
			struct EndSeqNo
			{
				static constexpr uint16_t tag{ 16 };
			};

			// ExecID(17): CHAR
			struct ExecID
			{
				static constexpr uint16_t tag{ 17 };
			};

			// ExecInst(18): CHAR
			struct ExecInst
			{
				static constexpr uint16_t tag{ 18 };
				static constexpr char STAY_ON_OFFERSIDE{ '0' };
				static constexpr char NOT_HELD{ '1' };
				static constexpr char WORK{ '2' };
				static constexpr char GO_ALONG{ '3' };
				static constexpr char OVER_THE_DAY{ '4' };
				static constexpr char HELD{ '5' };
				static constexpr char PARTICIPATE_DONT_INITIATE{ '6' };
				static constexpr char STRICT_SCALE{ '7' };
				static constexpr char TRY_TO_SCALE{ '8' };
				static constexpr char STAY_ON_BIDSIDE{ '9' };
				static constexpr char NO_CROSS{ 'A' };
				static constexpr char OK_TO_CROSS{ 'B' };
				static constexpr char CALL_FIRST{ 'C' };
				static constexpr char PERCENT_OF_VOLUME{ 'D' };
				static constexpr char DO_NOT_INCREASE{ 'E' };
				static constexpr char DO_NOT_REDUCE{ 'F' };
				static constexpr char ALL_OR_NONE{ 'G' };
				static constexpr char INSTITUTIONS_ONLY{ 'I' };
				static constexpr char LAST_PEG{ 'L' };
				static constexpr char MID_PRICE_PEG{ 'M' };
				static constexpr char NON_NEGOTIABLE{ 'N' };
				static constexpr char OPENING_PEG{ 'O' };
				static constexpr char MARKET_PEG{ 'P' };
				static constexpr char PRIMARY_PEG{ 'R' };
				static constexpr char SUSPEND{ 'S' };
				static constexpr char CUSTOMER_DISPLAY_INSTRUCTION{ 'U' };
				static constexpr char NETTING{ 'V' };
			};

			// ExecRefID(19): CHAR
			struct ExecRefID
			{
				static constexpr uint16_t tag{ 19 };
			};

			// ExecTransType(20): CHAR
			struct ExecTransType
			{
				static constexpr uint16_t tag{ 20 };
				static constexpr char NEW{ '0' };
				static constexpr char CANCEL{ '1' };
				static constexpr char CORRECT{ '2' };
				static constexpr char STATUS{ '3' };
			};

			// HandlInst(21): CHAR
			struct HandlInst
			{
				static constexpr uint16_t tag{ 21 };
				static constexpr char AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTION{ '1' };
				static constexpr char AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OK{ '2' };
				static constexpr char MANUAL_ORDER_BEST_EXECUTION{ '3' };
			};

			// IDSource(22): CHAR
			struct IDSource
			{
				static constexpr uint16_t tag{ 22 };
				static constexpr char CUSIP{ '1' };
				static constexpr char SEDOL{ '2' };
				static constexpr char QUIK{ '3' };
				static constexpr char ISIN_NUMBER{ '4' };
				static constexpr char RIC_CODE{ '5' };
				static constexpr char ISO_CURRENCY_CODE{ '6' };
				static constexpr char ISO_COUNTRY_CODE{ '7' };
			};

			// IOIid(23): CHAR
			struct IOIid
			{
				static constexpr uint16_t tag{ 23 };
			};

			// IOIOthSvc(24): CHAR
			struct IOIOthSvc
			{
				static constexpr uint16_t tag{ 24 };
				static constexpr char AUTEX{ 'A' };
				static constexpr char BRIDGE{ 'B' };
			};

			// IOIQltyInd(25): CHAR
			struct IOIQltyInd
			{
				static constexpr uint16_t tag{ 25 };
				static constexpr char HIGH{ 'H' };
				static constexpr char LOW{ 'L' };
				static constexpr char MEDIUM{ 'M' };
			};

			// IOIRefID(26): CHAR
			struct IOIRefID
			{
				static constexpr uint16_t tag{ 26 };
			};

			// IOIShares(27): CHAR
			struct IOIShares
			{
				static constexpr uint16_t tag{ 27 };
				static constexpr char LARGE{ 'L' };
				static constexpr char MEDIUM{ 'M' };
				static constexpr char SMALL{ 'S' };
			};

			// IOITransType(28): CHAR
			struct IOITransType
			{
				static constexpr uint16_t tag{ 28 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NEW{ 'N' };
				static constexpr char REPLACE{ 'R' };
			};

			// LastCapacity(29): CHAR
			struct LastCapacity
			{
				static constexpr uint16_t tag{ 29 };
				static constexpr char AGENT{ '1' };
				static constexpr char CROSS_AS_AGENT{ '2' };
				static constexpr char CROSS_AS_PRINCIPAL{ '3' };
				static constexpr char PRINCIPAL{ '4' };
			};

			// LastMkt(30): CHAR
			struct LastMkt
			{
				static constexpr uint16_t tag{ 30 };
			};

			// LastPx(31): FLOAT
			struct LastPx
			{
				static constexpr uint16_t tag{ 31 };
			};

			// LastShares(32): INT
			struct LastShares
			{
				static constexpr uint16_t tag{ 32 };
			};

			// LinesOfText(33): INT
			struct LinesOfText
			{
				static constexpr uint16_t tag{ 33 };
			};

			// MsgSeqNum(34): INT
			struct MsgSeqNum
			{
				static constexpr uint16_t tag{ 34 };
			};

			// MsgType(35): STRING
			struct MsgType
			{
				static constexpr uint16_t tag{ 35 };
				static inline const std::string HEARTBEAT{ "0" };
				static inline const std::string TEST_REQUEST{ "1" };
				static inline const std::string RESEND_REQUEST{ "2" };
				static inline const std::string REJECT{ "3" };
				static inline const std::string SEQUENCE_RESET{ "4" };
				static inline const std::string LOGOUT{ "5" };
				static inline const std::string INDICATION_OF_INTEREST{ "6" };
				static inline const std::string ADVERTISEMENT{ "7" };
				static inline const std::string EXECUTION_REPORT{ "8" };
				static inline const std::string ORDER_CANCEL_REJECT{ "9" };
				static inline const std::string LOGON{ "A" };
				static inline const std::string NEWS{ "B" };
				static inline const std::string EMAIL{ "C" };
				static inline const std::string ORDER_D{ "D" };
				static inline const std::string ORDER_E{ "E" };
				static inline const std::string ORDER_CANCEL_REQUEST{ "F" };
				static inline const std::string ORDER_CANCEL_REPLACE_REQUEST{ "G" };
				static inline const std::string ORDER_STATUS_REQUEST{ "H" };
				static inline const std::string ALLOCATION{ "J" };
				static inline const std::string LIST_CANCEL_REQUEST{ "K" };
				static inline const std::string LIST_EXECUTE{ "L" };
				static inline const std::string LIST_STATUS_REQUEST{ "M" };
				static inline const std::string LIST_STATUS{ "N" };
				static inline const std::string ALLOCATION_ACK{ "P" };
				static inline const std::string DONT_KNOW_TRADE{ "Q" };
				static inline const std::string QUOTE_REQUEST{ "R" };
				static inline const std::string QUOTE{ "S" };
				static inline const std::string SETTLEMENT_INSTRUCTIONS{ "T" };
			};

			// NewSeqNo(36): INT
			struct NewSeqNo
			{
				static constexpr uint16_t tag{ 36 };
			};

			// OrderID(37): CHAR
			struct OrderID
			{
				static constexpr uint16_t tag{ 37 };
			};

			// OrderQty(38): INT
			struct OrderQty
			{
				static constexpr uint16_t tag{ 38 };
			};

			// OrdStatus(39): CHAR
			struct OrdStatus
			{
				static constexpr uint16_t tag{ 39 };
				static constexpr char NEW{ '0' };
				static constexpr char PARTIALLY_FILLED{ '1' };
				static constexpr char FILLED{ '2' };
				static constexpr char DONE_FOR_DAY{ '3' };
				static constexpr char CANCELED{ '4' };
				static constexpr char REPLACED{ '5' };
				static constexpr char PENDING_CANCEL_REPLACE{ '6' };
				static constexpr char STOPPED{ '7' };
				static constexpr char REJECTED{ '8' };
				static constexpr char SUSPENDED{ '9' };
				static constexpr char PENDING_NEW{ 'A' };
				static constexpr char CALCULATED{ 'B' };
				static constexpr char EXPIRED{ 'C' };
			};

			// OrdType(40): CHAR
			struct OrdType
			{
				static constexpr uint16_t tag{ 40 };
				static constexpr char MARKET{ '1' };
				static constexpr char LIMIT{ '2' };
				static constexpr char STOP{ '3' };
				static constexpr char STOP_LIMIT{ '4' };
				static constexpr char MARKET_ON_CLOSE{ '5' };
				static constexpr char WITH_OR_WITHOUT{ '6' };
				static constexpr char LIMIT_OR_BETTER{ '7' };
				static constexpr char LIMIT_WITH_OR_WITHOUT{ '8' };
				static constexpr char ON_BASIS{ '9' };
				static constexpr char ON_CLOSE{ 'A' };
				static constexpr char LIMIT_ON_CLOSE{ 'B' };
				static constexpr char FOREX_C{ 'C' };
				static constexpr char PREVIOUSLY_QUOTED{ 'D' };
				static constexpr char PREVIOUSLY_INDICATED{ 'E' };
				static constexpr char FOREX_F{ 'F' };
				static constexpr char FOREX_G{ 'G' };
				static constexpr char FOREX_H{ 'H' };
				static constexpr char PEGGED{ 'P' };
			};

			// OrigClOrdID(41): CHAR
			struct OrigClOrdID
			{
				static constexpr uint16_t tag{ 41 };
			};

			// OrigTime(42): UTCTIMESTAMP
			struct OrigTime
			{
				static constexpr uint16_t tag{ 42 };
			};

			// PossDupFlag(43): CHAR
			struct PossDupFlag
			{
				static constexpr uint16_t tag{ 43 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// Price(44): FLOAT
			struct Price
			{
				static constexpr uint16_t tag{ 44 };
			};

			// RefSeqNum(45): INT
			struct RefSeqNum
			{
				static constexpr uint16_t tag{ 45 };
			};

			// RelatdSym(46): CHAR
			struct RelatdSym
			{
				static constexpr uint16_t tag{ 46 };
			};

			// Rule80A(47): CHAR
			struct Rule80A
			{
				static constexpr uint16_t tag{ 47 };
				static constexpr char AGENCY_SINGLE_ORDER{ 'A' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_B{ 'B' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_MEMBER_FIRM_ORG{ 'C' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM_ORG{ 'D' };
				static constexpr char REGISTERED_EQUITY_MARKET_MAKER_TRADES{ 'E' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_F{ 'F' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_H{ 'H' };
				static constexpr char INDIVIDUAL_INVESTOR_SINGLE_ORDER{ 'I' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER{ 'J' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER{ 'K' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADE{ 'L' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBER{ 'M' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_MEMBER{ 'N' };
				static constexpr char COMPETING_DEALER_TRADES_O{ 'O' };
				static constexpr char PRINCIPAL{ 'P' };
				static constexpr char COMPETING_DEALER_TRADES_R{ 'R' };
				static constexpr char SPECIALIST_TRADES{ 'S' };
				static constexpr char COMPETING_DEALER_TRADES_T{ 'T' };
				static constexpr char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_AGENCY{ 'U' };
				static constexpr char ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBER{ 'W' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_NOT_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADE{ 'X' };
				static constexpr char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_AGENCY{ 'Y' };
				static constexpr char SHORT_EXEMPT_TRANSACTION_FOR_NON_MEMBER_COMPETING_MARKET_MAKER{ 'Z' };
			};

			// SecurityID(48): CHAR
			struct SecurityID
			{
				static constexpr uint16_t tag{ 48 };
			};

			// SenderCompID(49): CHAR
			struct SenderCompID
			{
				static constexpr uint16_t tag{ 49 };
			};

			// SenderSubID(50): CHAR
			struct SenderSubID
			{
				static constexpr uint16_t tag{ 50 };
			};

			// SendingDate(51): LOCALMKTDATE
			struct SendingDate
			{
				static constexpr uint16_t tag{ 51 };
			};

			// SendingTime(52): UTCTIMESTAMP
			struct SendingTime
			{
				static constexpr uint16_t tag{ 52 };
			};

			// Shares(53): INT
			struct Shares
			{
				static constexpr uint16_t tag{ 53 };
			};

			// Side(54): CHAR
			struct Side
			{
				static constexpr uint16_t tag{ 54 };
				static constexpr char BUY{ '1' };
				static constexpr char SELL{ '2' };
				static constexpr char BUY_MINUS{ '3' };
				static constexpr char SELL_PLUS{ '4' };
				static constexpr char SELL_SHORT{ '5' };
				static constexpr char SELL_SHORT_EXEMPT{ '6' };
				static constexpr char UNDISCLOSED{ '7' };
				static constexpr char CROSS{ '8' };
			};

			// Symbol(55): CHAR
			struct Symbol
			{
				static constexpr uint16_t tag{ 55 };
			};

			// TargetCompID(56): CHAR
			struct TargetCompID
			{
				static constexpr uint16_t tag{ 56 };
			};

			// TargetSubID(57): CHAR
			struct TargetSubID
			{
				static constexpr uint16_t tag{ 57 };
			};

			// Text(58): CHAR
			struct Text
			{
				static constexpr uint16_t tag{ 58 };
			};

			// TimeInForce(59): CHAR
			struct TimeInForce
			{
				static constexpr uint16_t tag{ 59 };
				static constexpr char DAY{ '0' };
				static constexpr char GOOD_TILL_CANCEL{ '1' };
				static constexpr char AT_THE_OPENING{ '2' };
				static constexpr char IMMEDIATE_OR_CANCEL{ '3' };
				static constexpr char FILL_OR_KILL{ '4' };
				static constexpr char GOOD_TILL_CROSSING{ '5' };
				static constexpr char GOOD_TILL_DATE{ '6' };
			};

			// TransactTime(60): UTCTIMESTAMP
			struct TransactTime
			{
				static constexpr uint16_t tag{ 60 };
			};

			// Urgency(61): CHAR
			struct Urgency
			{
				static constexpr uint16_t tag{ 61 };
				static constexpr char NORMAL{ '0' };
				static constexpr char FLASH{ '1' };
				static constexpr char BACKGROUND{ '2' };
			};

			// ValidUntilTime(62): UTCTIMESTAMP
			struct ValidUntilTime
			{
				static constexpr uint16_t tag{ 62 };
			};

			// SettlmntTyp(63): CHAR
			struct SettlmntTyp
			{
				static constexpr uint16_t tag{ 63 };
				static constexpr char REGULAR{ '0' };
				static constexpr char CASH{ '1' };
				static constexpr char NEXT_DAY{ '2' };
				static constexpr char T_PLUS_2{ '3' };
				static constexpr char T_PLUS_3{ '4' };
				static constexpr char T_PLUS_4{ '5' };
				static constexpr char FUTURE{ '6' };
				static constexpr char WHEN_ISSUED{ '7' };
				static constexpr char SELLERS_OPTION{ '8' };
				static constexpr char T_PLUS_5{ '9' };
			};

			// FutSettDate(64): LOCALMKTDATE
			struct FutSettDate
			{
				static constexpr uint16_t tag{ 64 };
			};

			// SymbolSfx(65): CHAR
			struct SymbolSfx
			{
				static constexpr uint16_t tag{ 65 };
			};

			// ListID(66): CHAR
			struct ListID
			{
				static constexpr uint16_t tag{ 66 };
			};

			// ListSeqNo(67): INT
			struct ListSeqNo
			{
				static constexpr uint16_t tag{ 67 };
			};

			// ListNoOrds(68): INT
			struct ListNoOrds
			{
				static constexpr uint16_t tag{ 68 };
			};

			// ListExecInst(69): CHAR
			struct ListExecInst
			{
				static constexpr uint16_t tag{ 69 };
			};

			// AllocID(70): CHAR
			struct AllocID
			{
				static constexpr uint16_t tag{ 70 };
			};

			// AllocTransType(71): CHAR
			struct AllocTransType
			{
				static constexpr uint16_t tag{ 71 };
				static constexpr char NEW{ '0' };
				static constexpr char REPLACE{ '1' };
				static constexpr char CANCEL{ '2' };
				static constexpr char PRELIMINARY{ '3' };
				static constexpr char CALCULATED{ '4' };
			};

			// RefAllocID(72): CHAR
			struct RefAllocID
			{
				static constexpr uint16_t tag{ 72 };
			};

			// NoOrders(73): INT
			struct NoOrders
			{
				static constexpr uint16_t tag{ 73 };
			};

			// AvgPrxPrecision(74): INT
			struct AvgPrxPrecision
			{
				static constexpr uint16_t tag{ 74 };
			};

			// TradeDate(75): LOCALMKTDATE
			struct TradeDate
			{
				static constexpr uint16_t tag{ 75 };
			};

			// ExecBroker(76): CHAR
			struct ExecBroker
			{
				static constexpr uint16_t tag{ 76 };
			};

			// OpenClose(77): CHAR
			struct OpenClose
			{
				static constexpr uint16_t tag{ 77 };
				static constexpr char CLOSE{ 'C' };
				static constexpr char OPEN{ 'O' };
			};

			// NoAllocs(78): INT
			struct NoAllocs
			{
				static constexpr uint16_t tag{ 78 };
			};

			// AllocAccount(79): CHAR
			struct AllocAccount
			{
				static constexpr uint16_t tag{ 79 };
			};

			// AllocShares(80): INT
			struct AllocShares
			{
				static constexpr uint16_t tag{ 80 };
			};

			// ProcessCode(81): CHAR
			struct ProcessCode
			{
				static constexpr uint16_t tag{ 81 };
				static constexpr char REGULAR{ '0' };
				static constexpr char SOFT_DOLLAR{ '1' };
				static constexpr char STEP_IN{ '2' };
				static constexpr char STEP_OUT{ '3' };
				static constexpr char SOFT_DOLLAR_STEP_IN{ '4' };
				static constexpr char SOFT_DOLLAR_STEP_OUT{ '5' };
				static constexpr char PLAN_SPONSOR{ '6' };
			};

			// NoRpts(82): INT
			struct NoRpts
			{
				static constexpr uint16_t tag{ 82 };
			};

			// RptSeq(83): INT
			struct RptSeq
			{
				static constexpr uint16_t tag{ 83 };
			};

			// CxlQty(84): INT
			struct CxlQty
			{
				static constexpr uint16_t tag{ 84 };
			};

			// NoDlvyInst(85): INT
			struct NoDlvyInst
			{
				static constexpr uint16_t tag{ 85 };
			};

			// DlvyInst(86): CHAR
			struct DlvyInst
			{
				static constexpr uint16_t tag{ 86 };
			};

			// AllocStatus(87): INT
			struct AllocStatus
			{
				static constexpr uint16_t tag{ 87 };
				static constexpr int32_t ACCEPTED{ 0 };
				static constexpr int32_t REJECTED{ 1 };
				static constexpr int32_t PARTIAL_ACCEPT{ 2 };
				static constexpr int32_t RECEIVED{ 3 };
			};

			// AllocRejCode(88): INT
			struct AllocRejCode
			{
				static constexpr uint16_t tag{ 88 };
				static constexpr int32_t UNKNOWN_ACCOUNT{ 0 };
				static constexpr int32_t INCORRECT_QUANTITY{ 1 };
				static constexpr int32_t INCORRECT_AVERAGE_PRICE{ 2 };
				static constexpr int32_t UNKNOWN_EXECUTING_BROKER_MNEMONIC{ 3 };
				static constexpr int32_t COMMISSION_DIFFERENCE{ 4 };
				static constexpr int32_t UNKNOWN_ORDERID{ 5 };
				static constexpr int32_t UNKNOWN_LISTID{ 6 };
				static constexpr int32_t OTHER{ 7 };
			};

			// Signature(89): DATA
			struct Signature
			{
				static constexpr uint16_t tag{ 89 };
			};

			// SecureDataLen(90): LENGTH
			struct SecureDataLen
			{
				static constexpr uint16_t tag{ 90 };
			};

			// SecureData(91): DATA
			struct SecureData
			{
				static constexpr uint16_t tag{ 91 };
			};

			// BrokerOfCredit(92): CHAR
			struct BrokerOfCredit
			{
				static constexpr uint16_t tag{ 92 };
			};

			// SignatureLength(93): LENGTH
			struct SignatureLength
			{
				static constexpr uint16_t tag{ 93 };
			};

			// EmailType(94): CHAR
			struct EmailType
			{
				static constexpr uint16_t tag{ 94 };
				static constexpr char NEW{ '0' };
				static constexpr char REPLY{ '1' };
				static constexpr char ADMIN_REPLY{ '2' };
			};

			// RawDataLength(95): LENGTH
			struct RawDataLength
			{
				static constexpr uint16_t tag{ 95 };
			};

			// RawData(96): DATA
			struct RawData
			{
				static constexpr uint16_t tag{ 96 };
			};

			// PossResend(97): CHAR
			struct PossResend
			{
				static constexpr uint16_t tag{ 97 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// EncryptMethod(98): INT
			struct EncryptMethod
			{
				static constexpr uint16_t tag{ 98 };
				static constexpr int32_t NONE{ 0 };
				static constexpr int32_t PKCS{ 1 };
				static constexpr int32_t DES{ 2 };
				static constexpr int32_t PKCS_DES{ 3 };
				static constexpr int32_t PGP_DES{ 4 };
				static constexpr int32_t PGP_DES_MD5{ 5 };
				static constexpr int32_t PEM_DES_MD5{ 6 };
			};

			// StopPx(99): FLOAT
			struct StopPx
			{
				static constexpr uint16_t tag{ 99 };
			};

			// ExDestination(100): CHAR
			struct ExDestination
			{
				static constexpr uint16_t tag{ 100 };
			};

			// CxlRejReason(102): INT
			struct CxlRejReason
			{
				static constexpr uint16_t tag{ 102 };
				static constexpr int32_t TOO_LATE_TO_CANCEL{ 0 };
				static constexpr int32_t UNKNOWN_ORDER{ 1 };
			};

			// OrdRejReason(103): INT
			struct OrdRejReason
			{
				static constexpr uint16_t tag{ 103 };
				static constexpr int32_t BROKER_OPTION{ 0 };
				static constexpr int32_t UNKNOWN_SYMBOL{ 1 };
				static constexpr int32_t EXCHANGE_CLOSED{ 2 };
				static constexpr int32_t ORDER_EXCEEDS_LIMIT{ 3 };
				static constexpr int32_t TOO_LATE_TO_ENTER{ 4 };
				static constexpr int32_t UNKNOWN_ORDER{ 5 };
				static constexpr int32_t DUPLICATE_ORDER{ 6 };
			};

			// IOIQualifier(104): CHAR
			struct IOIQualifier
			{
				static constexpr uint16_t tag{ 104 };
				static constexpr char ALL_OR_NONE{ 'A' };
				static constexpr char AT_THE_CLOSE{ 'C' };
				static constexpr char IN_TOUCH_WITH{ 'I' };
				static constexpr char LIMIT{ 'L' };
				static constexpr char MORE_BEHIND{ 'M' };
				static constexpr char AT_THE_OPEN{ 'O' };
				static constexpr char TAKING_A_POSITION{ 'P' };
				static constexpr char AT_THE_MARKET{ 'Q' };
				static constexpr char PORTFOLIO_SHOW_N{ 'S' };
				static constexpr char THROUGH_THE_DAY{ 'T' };
				static constexpr char VERSUS{ 'V' };
				static constexpr char INDICATION{ 'W' };
				static constexpr char CROSSING_OPPORTUNITY{ 'X' };
				static constexpr char AT_THE_MIDPOINT{ 'Y' };
				static constexpr char PRE_OPEN{ 'Z' };
			};

			// WaveNo(105): CHAR
			struct WaveNo
			{
				static constexpr uint16_t tag{ 105 };
			};

			// Issuer(106): CHAR
			struct Issuer
			{
				static constexpr uint16_t tag{ 106 };
			};

			// SecurityDesc(107): CHAR
			struct SecurityDesc
			{
				static constexpr uint16_t tag{ 107 };
			};

			// HeartBtInt(108): INT
			struct HeartBtInt
			{
				static constexpr uint16_t tag{ 108 };
			};

			// ClientID(109): CHAR
			struct ClientID
			{
				static constexpr uint16_t tag{ 109 };
			};

			// MinQty(110): INT
			struct MinQty
			{
				static constexpr uint16_t tag{ 110 };
			};

			// MaxFloor(111): INT
			struct MaxFloor
			{
				static constexpr uint16_t tag{ 111 };
			};

			// TestReqID(112): CHAR
			struct TestReqID
			{
				static constexpr uint16_t tag{ 112 };
			};

			// ReportToExch(113): CHAR
			struct ReportToExch
			{
				static constexpr uint16_t tag{ 113 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// LocateReqd(114): CHAR
			struct LocateReqd
			{
				static constexpr uint16_t tag{ 114 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// OnBehalfOfCompID(115): CHAR
			struct OnBehalfOfCompID
			{
				static constexpr uint16_t tag{ 115 };
			};

			// OnBehalfOfSubID(116): CHAR
			struct OnBehalfOfSubID
			{
				static constexpr uint16_t tag{ 116 };
			};

			// QuoteID(117): CHAR
			struct QuoteID
			{
				static constexpr uint16_t tag{ 117 };
			};

			// NetMoney(118): FLOAT
			struct NetMoney
			{
				static constexpr uint16_t tag{ 118 };
			};

			// SettlCurrAmt(119): FLOAT
			struct SettlCurrAmt
			{
				static constexpr uint16_t tag{ 119 };
			};

			// SettlCurrency(120): CHAR
			struct SettlCurrency
			{
				static constexpr uint16_t tag{ 120 };
			};

			// ForexReq(121): CHAR
			struct ForexReq
			{
				static constexpr uint16_t tag{ 121 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// OrigSendingTime(122): UTCTIMESTAMP
			struct OrigSendingTime
			{
				static constexpr uint16_t tag{ 122 };
			};

			// GapFillFlag(123): CHAR
			struct GapFillFlag
			{
				static constexpr uint16_t tag{ 123 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// NoExecs(124): INT
			struct NoExecs
			{
				static constexpr uint16_t tag{ 124 };
			};

			// CxlType(125):  CHAR
			struct CxlType
			{
				static constexpr uint16_t tag{ 125 };
			};

			// ExpireTime(126): UTCTIMESTAMP
			struct ExpireTime
			{
				static constexpr uint16_t tag{ 126 };
			};

			// DKReason(127): CHAR
			struct DKReason
			{
				static constexpr uint16_t tag{ 127 };
				static constexpr char UNKNOWN_SYMBOL{ 'A' };
				static constexpr char WRONG_SIDE{ 'B' };
				static constexpr char QUANTITY_EXCEEDS_ORDER{ 'C' };
				static constexpr char NO_MATCHING_ORDER{ 'D' };
				static constexpr char PRICE_EXCEEDS_LIMIT{ 'E' };
				static constexpr char OTHER{ 'Z' };
			};

			// DeliverToCompID(128): CHAR
			struct DeliverToCompID
			{
				static constexpr uint16_t tag{ 128 };
			};

			// DeliverToSubID(129): CHAR
			struct DeliverToSubID
			{
				static constexpr uint16_t tag{ 129 };
			};

			// IOINaturalFlag(130): CHAR
			struct IOINaturalFlag
			{
				static constexpr uint16_t tag{ 130 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// QuoteReqID(131): CHAR
			struct QuoteReqID
			{
				static constexpr uint16_t tag{ 131 };
			};

			// BidPx(132): FLOAT
			struct BidPx
			{
				static constexpr uint16_t tag{ 132 };
			};

			// OfferPx(133): FLOAT
			struct OfferPx
			{
				static constexpr uint16_t tag{ 133 };
			};

			// BidSize(134): INT
			struct BidSize
			{
				static constexpr uint16_t tag{ 134 };
			};

			// OfferSize(135): INT
			struct OfferSize
			{
				static constexpr uint16_t tag{ 135 };
			};

			// NoMiscFees(136): INT
			struct NoMiscFees
			{
				static constexpr uint16_t tag{ 136 };
			};

			// MiscFeeAmt(137): FLOAT
			struct MiscFeeAmt
			{
				static constexpr uint16_t tag{ 137 };
			};

			// MiscFeeCurr(138): CHAR
			struct MiscFeeCurr
			{
				static constexpr uint16_t tag{ 138 };
			};

			// MiscFeeType(139): CHAR
			struct MiscFeeType
			{
				static constexpr uint16_t tag{ 139 };
				static constexpr char REGULATORY{ '1' };
				static constexpr char TAX{ '2' };
				static constexpr char LOCAL_COMMISSION{ '3' };
				static constexpr char EXCHANGE_FEES{ '4' };
				static constexpr char STAMP{ '5' };
				static constexpr char LEVY{ '6' };
				static constexpr char OTHER{ '7' };
				static constexpr char MARKUP{ '8' };
			};

			// PrevClosePx(140): FLOAT
			struct PrevClosePx
			{
				static constexpr uint16_t tag{ 140 };
			};

			// ResetSeqNumFlag(141): CHAR
			struct ResetSeqNumFlag
			{
				static constexpr uint16_t tag{ 141 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// SenderLocationID(142): CHAR
			struct SenderLocationID
			{
				static constexpr uint16_t tag{ 142 };
			};

			// TargetLocationID(143): CHAR
			struct TargetLocationID
			{
				static constexpr uint16_t tag{ 143 };
			};

			// OnBehalfOfLocationID(144): CHAR
			struct OnBehalfOfLocationID
			{
				static constexpr uint16_t tag{ 144 };
			};

			// DeliverToLocationID(145): CHAR
			struct DeliverToLocationID
			{
				static constexpr uint16_t tag{ 145 };
			};

			// NoRelatedSym(146): INT
			struct NoRelatedSym
			{
				static constexpr uint16_t tag{ 146 };
			};

			// Subject(147): CHAR
			struct Subject
			{
				static constexpr uint16_t tag{ 147 };
			};

			// Headline(148): CHAR
			struct Headline
			{
				static constexpr uint16_t tag{ 148 };
			};

			// URLLink(149): CHAR
			struct URLLink
			{
				static constexpr uint16_t tag{ 149 };
			};

			// ExecType(150): CHAR
			struct ExecType
			{
				static constexpr uint16_t tag{ 150 };
				static constexpr char NEW{ '0' };
				static constexpr char PARTIAL_FILL{ '1' };
				static constexpr char FILL{ '2' };
				static constexpr char DONE_FOR_DAY{ '3' };
				static constexpr char CANCELLED{ '4' };
				static constexpr char REPLACE{ '5' };
				static constexpr char PENDING_CANCEL_REPLACE{ '6' };
				static constexpr char STOPPED{ '7' };
				static constexpr char REJECTED{ '8' };
				static constexpr char SUSPENDED{ '9' };
				static constexpr char PENDING_NEW{ 'A' };
				static constexpr char CALCULATED{ 'B' };
				static constexpr char EXPIRED{ 'C' };
			};

			// LeavesQty(151): INT
			struct LeavesQty
			{
				static constexpr uint16_t tag{ 151 };
			};

			// CashOrderQty(152): FLOAT
			struct CashOrderQty
			{
				static constexpr uint16_t tag{ 152 };
			};

			// AllocAvgPx(153): FLOAT
			struct AllocAvgPx
			{
				static constexpr uint16_t tag{ 153 };
			};

			// AllocNetMoney(154): FLOAT
			struct AllocNetMoney
			{
				static constexpr uint16_t tag{ 154 };
			};

			// SettlCurrFxRate(155): FLOAT
			struct SettlCurrFxRate
			{
				static constexpr uint16_t tag{ 155 };
			};

			// SettlCurrFxRateCalc(156): CHAR
			struct SettlCurrFxRateCalc
			{
				static constexpr uint16_t tag{ 156 };
				static constexpr char MULTIPLY{ 'M' };
				static constexpr char DIVIDE{ 'D' };
			};

			// NumDaysInterest(157): INT
			struct NumDaysInterest
			{
				static constexpr uint16_t tag{ 157 };
			};

			// AccruedInterestRate(158): FLOAT
			struct AccruedInterestRate
			{
				static constexpr uint16_t tag{ 158 };
			};

			// AccruedInterestAmt(159): FLOAT
			struct AccruedInterestAmt
			{
				static constexpr uint16_t tag{ 159 };
			};

			// SettlInstMode(160): CHAR
			struct SettlInstMode
			{
				static constexpr uint16_t tag{ 160 };
				static constexpr char DEFAULT{ '0' };
				static constexpr char STANDING_INSTRUCTIONS_PROVIDED{ '1' };
				static constexpr char SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDING{ '2' };
				static constexpr char SPECIFIC_ALLOCATION_ACCOUNT_STANDING{ '3' };
			};

			// AllocText(161): CHAR
			struct AllocText
			{
				static constexpr uint16_t tag{ 161 };
			};

			// SettlInstID(162): CHAR
			struct SettlInstID
			{
				static constexpr uint16_t tag{ 162 };
			};

			// SettlInstTransType(163): CHAR
			struct SettlInstTransType
			{
				static constexpr uint16_t tag{ 163 };
				static constexpr char CANCEL{ 'C' };
				static constexpr char NEW{ 'N' };
				static constexpr char REPLACE{ 'R' };
			};

			// EmailThreadID(164): CHAR
			struct EmailThreadID
			{
				static constexpr uint16_t tag{ 164 };
			};

			// SettlInstSource(165): CHAR
			struct SettlInstSource
			{
				static constexpr uint16_t tag{ 165 };
				static constexpr char BROKERS_INSTRUCTIONS{ '1' };
				static constexpr char INSTITUTIONS_INSTRUCTIONS{ '2' };
			};

			// SettlLocation(166): STRING
			struct SettlLocation
			{
				static constexpr uint16_t tag{ 166 };
				static inline const std::string CEDEL{ "CED" };
				static inline const std::string DEPOSITORY_TRUST_COMPANY{ "DTC" };
				static inline const std::string EUROCLEAR{ "EUR" };
				static inline const std::string FEDERAL_BOOK_ENTRY{ "FED" };
				static inline const std::string LOCAL_MARKET_SETTLE_LOCATION{ "ISO Country Code" };
				static inline const std::string PHYSICAL{ "PNY" };
				static inline const std::string PARTICIPANT_TRUST_COMPANY{ "PTC" };
			};

			// SecurityType(167): STRING
			struct SecurityType
			{
				static constexpr uint16_t tag{ 167 };
				static inline const std::string BANKERS_ACCEPTANCE{ "BA" };
				static inline const std::string CERTIFICATE_OF_DEPOSIT{ "CD" };
				static inline const std::string COLLATERALIZE_MORTGAGE_OBLIGATION{ "CMO" };
				static inline const std::string CORPORATE_BOND{ "CORP" };
				static inline const std::string COMMERCIAL_PAPER{ "CP" };
				static inline const std::string CORPORATE_PRIVATE_PLACEMENT{ "CPP" };
				static inline const std::string COMMON_STOCK{ "CS" };
				static inline const std::string FEDERAL_HOUSING_AUTHORITY{ "FHA" };
				static inline const std::string FEDERAL_HOME_LOAN{ "FHL" };
				static inline const std::string FEDERAL_NATIONAL_MORTGAGE_ASSOCIATION{ "FN" };
				static inline const std::string FOREIGN_EXCHANGE_CONTRACT{ "FOR" };
				static inline const std::string FUTURE{ "FUT" };
				static inline const std::string GOVERNMENT_NATIONAL_MORTGAGE_ASSOCIATION{ "GN" };
				static inline const std::string TREASURIES_PLUS_AGENCY_DEBENTURE{ "GOVT" };
				static inline const std::string MUTUAL_FUND{ "MF" };
				static inline const std::string MORTGAGE_INTEREST_ONLY{ "MIO" };
				static inline const std::string MORTGAGE_PRINCIPLE_ONLY{ "MPO" };
				static inline const std::string MORTGAGE_PRIVATE_PLACEMENT{ "MPP" };
				static inline const std::string MISCELLANEOUS_PASS_THRU{ "MPT" };
				static inline const std::string MUNICIPAL_BOND{ "MUNI" };
				static inline const std::string NO_ISITC_SECURITY_TYPE{ "NONE" };
				static inline const std::string OPTION{ "OPT" };
				static inline const std::string PREFERRED_STOCK{ "PS" };
				static inline const std::string REPURCHASE_AGREEMENT{ "RP" };
				static inline const std::string REVERSE_REPURCHASE_AGREEMENT{ "RVRP" };
				static inline const std::string STUDENT_LOAN_MARKETING_ASSOCIATION{ "SL" };
				static inline const std::string TIME_DEPOSIT{ "TD" };
				static inline const std::string US_TREASURY_BILL{ "USTB" };
				static inline const std::string WARRANT{ "WAR" };
				static inline const std::string CATS_TIGERS_LIONS{ "ZOO" };
			};

			// EffectiveTime(168): UTCTIMESTAMP
			struct EffectiveTime
			{
				static constexpr uint16_t tag{ 168 };
			};

			// StandInstDbType(169): INT
			struct StandInstDbType
			{
				static constexpr uint16_t tag{ 169 };
				static constexpr int32_t OTHER{ 0 };
				static constexpr int32_t DTC_SID{ 1 };
				static constexpr int32_t THOMSON_ALERT{ 2 };
				static constexpr int32_t A_GLOBAL_CUSTODIAN{ 3 };
			};

			// StandInstDbName(170): CHAR
			struct StandInstDbName
			{
				static constexpr uint16_t tag{ 170 };
			};

			// StandInstDbID(171): CHAR
			struct StandInstDbID
			{
				static constexpr uint16_t tag{ 171 };
			};

			// SettlDeliveryType(172): INT
			struct SettlDeliveryType
			{
				static constexpr uint16_t tag{ 172 };
			};

			// SettlDepositoryCode(173): CHAR
			struct SettlDepositoryCode
			{
				static constexpr uint16_t tag{ 173 };
			};

			// SettlBrkrCode(174): CHAR
			struct SettlBrkrCode
			{
				static constexpr uint16_t tag{ 174 };
			};

			// SettlInstCode(175): CHAR
			struct SettlInstCode
			{
				static constexpr uint16_t tag{ 175 };
			};

			// SecuritySettlAgentName(176): CHAR
			struct SecuritySettlAgentName
			{
				static constexpr uint16_t tag{ 176 };
			};

			// SecuritySettlAgentCode(177): CHAR
			struct SecuritySettlAgentCode
			{
				static constexpr uint16_t tag{ 177 };
			};

			// SecuritySettlAgentAcctNum(178): CHAR
			struct SecuritySettlAgentAcctNum
			{
				static constexpr uint16_t tag{ 178 };
			};

			// SecuritySettlAgentAcctName(179): CHAR
			struct SecuritySettlAgentAcctName
			{
				static constexpr uint16_t tag{ 179 };
			};

			// SecuritySettlAgentContactName(180): CHAR
			struct SecuritySettlAgentContactName
			{
				static constexpr uint16_t tag{ 180 };
			};

			// SecuritySettlAgentContactPhone(181): CHAR
			struct SecuritySettlAgentContactPhone
			{
				static constexpr uint16_t tag{ 181 };
			};

			// CashSettlAgentName(182): CHAR
			struct CashSettlAgentName
			{
				static constexpr uint16_t tag{ 182 };
			};

			// CashSettlAgentCode(183): CHAR
			struct CashSettlAgentCode
			{
				static constexpr uint16_t tag{ 183 };
			};

			// CashSettlAgentAcctNum(184): CHAR
			struct CashSettlAgentAcctNum
			{
				static constexpr uint16_t tag{ 184 };
			};

			// CashSettlAgentAcctName(185): CHAR
			struct CashSettlAgentAcctName
			{
				static constexpr uint16_t tag{ 185 };
			};

			// CashSettlAgentContactName(186): CHAR
			struct CashSettlAgentContactName
			{
				static constexpr uint16_t tag{ 186 };
			};

			// CashSettlAgentContactPhone(187): CHAR
			struct CashSettlAgentContactPhone
			{
				static constexpr uint16_t tag{ 187 };
			};

			// BidSpotRate(188): FLOAT
			struct BidSpotRate
			{
				static constexpr uint16_t tag{ 188 };
			};

			// BidForwardPoints(189): FLOAT
			struct BidForwardPoints
			{
				static constexpr uint16_t tag{ 189 };
			};

			// OfferSpotRate(190): FLOAT
			struct OfferSpotRate
			{
				static constexpr uint16_t tag{ 190 };
			};

			// OfferForwardPoints(191): FLOAT
			struct OfferForwardPoints
			{
				static constexpr uint16_t tag{ 191 };
			};

			// OrderQty2(192): FLOAT
			struct OrderQty2
			{
				static constexpr uint16_t tag{ 192 };
			};

			// FutSettDate2(193): LOCALMKTDATE
			struct FutSettDate2
			{
				static constexpr uint16_t tag{ 193 };
			};

			// LastSpotRate(194): FLOAT
			struct LastSpotRate
			{
				static constexpr uint16_t tag{ 194 };
			};

			// LastForwardPoints(195): FLOAT
			struct LastForwardPoints
			{
				static constexpr uint16_t tag{ 195 };
			};

			// AllocLinkID(196): CHAR
			struct AllocLinkID
			{
				static constexpr uint16_t tag{ 196 };
			};

			// AllocLinkType(197): INT
			struct AllocLinkType
			{
				static constexpr uint16_t tag{ 197 };
				static constexpr int32_t F_X_NETTING{ 0 };
				static constexpr int32_t F_X_SWAP{ 1 };
			};

			// SecondaryOrderID(198): CHAR
			struct SecondaryOrderID
			{
				static constexpr uint16_t tag{ 198 };
			};

			// NoIOIQualifiers(199): INT
			struct NoIOIQualifiers
			{
				static constexpr uint16_t tag{ 199 };
			};

			// MaturityMonthYear(200): MONTHYEAR
			struct MaturityMonthYear
			{
				static constexpr uint16_t tag{ 200 };
			};

			// PutOrCall(201): INT
			struct PutOrCall
			{
				static constexpr uint16_t tag{ 201 };
				static constexpr int32_t PUT{ 0 };
				static constexpr int32_t CALL{ 1 };
			};

			// StrikePrice(202): FLOAT
			struct StrikePrice
			{
				static constexpr uint16_t tag{ 202 };
			};

			// CoveredOrUncovered(203): INT
			struct CoveredOrUncovered
			{
				static constexpr uint16_t tag{ 203 };
				static constexpr int32_t COVERED{ 0 };
				static constexpr int32_t UNCOVERED{ 1 };
			};

			// CustomerOrFirm(204): INT
			struct CustomerOrFirm
			{
				static constexpr uint16_t tag{ 204 };
				static constexpr int32_t CUSTOMER{ 0 };
				static constexpr int32_t FIRM{ 1 };
			};

			// MaturityDay(205): DAYOFMONTH
			struct MaturityDay
			{
				static constexpr uint16_t tag{ 205 };
			};

			// OptAttribute(206): CHAR
			struct OptAttribute
			{
				static constexpr uint16_t tag{ 206 };
			};

			// SecurityExchange(207): CHAR
			struct SecurityExchange
			{
				static constexpr uint16_t tag{ 207 };
			};

			// NotifyBrokerOfCredit(208): CHAR
			struct NotifyBrokerOfCredit
			{
				static constexpr uint16_t tag{ 208 };
				static constexpr char NO{ 'N' };
				static constexpr char YES{ 'Y' };
			};

			// AllocHandlInst(209): INT
			struct AllocHandlInst
			{
				static constexpr uint16_t tag{ 209 };
				static constexpr int32_t MATCH{ 1 };
				static constexpr int32_t FORWARD{ 2 };
				static constexpr int32_t FORWARD_AND_MATCH{ 3 };
			};

			// MaxShow(210): INT
			struct MaxShow
			{
				static constexpr uint16_t tag{ 210 };
			};

			// PegDifference(211): FLOAT
			struct PegDifference
			{
				static constexpr uint16_t tag{ 211 };
			};
		}
	}
}

#endif // UFECPP_CONSTS_fb30d5f9_9b77_46fc_8180_e72eef58bfa1_